{
  "version": 3,
  "file": "data.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\data.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# b : comment line. LOC and keyword clues\r\n# a : Solution in Coffeescript.\r\n# c : call in Coffeescript syntax, three columns\r\n# d : axioms, two columns\r\n# e : links\r\n# OBS: String interpolation fungerar ej.\r\n\r\ndata =\r\n\r\n#########################\r\n\t\"Nyheter\" :\r\n#########################\r\n\r\n\t\t\"Nyheter\" :\r\n\t\t\tb:\"\"\"\r\n# NYHETER 2017 November\r\n#   A3: SingaporeMath\r\n#   A6: AverageTime\r\n# NYHETER 2017 Mars\r\n#   A6: CelsiusFahrenheit\r\n# NYHETER 2017 Mars\r\n#   A3: Introduktion, Nim, Sort, Växelcykel, Kalkylator\r\n#   A4: Earth, Glosor, Glosor[]\r\n#   A5: Palindrom, Rövarspråk, Advanced\r\n#   A7: Morse, Bråktal, Simplex, Bignum, Complex, Nian, Compressor\r\n#   A8: List recursion, Pokerhand, Matematik\r\n\r\n# Klicka nu på A0!\r\n\"\"\"\r\n\t\t\te:\r\n\t\t\t\t\"Intro to Coffeescript\" : \"http://blog.teamtreehouse.com/the-absolute-beginners-guide-to-coffeescript\"\r\n\t\t\t\t\"Snake Game\" : \"https://www.youtube.com/watch?v=AaGK-fj-BAM\"\r\n\t\t\t\t\"Asteroids with p5\" : \"https://www.youtube.com/watch?v=hacZU523FyM\"\r\n\t\t\t\t\"Matrix LOC:86\" : \"https://www.youtube.com/watch?v=S1TQCi9axzg\"\r\n\t\t\t\t\"Matrix LOC:25\" : \"https://github.com/ChristerNilsson/Lab/blob/master/2017/018-Green%20Rain/sketch.coffee\"\r\n\t\t\t\t\"Matter.js\" : \"https://www.youtube.com/watch?v=urR596FsU68\"\r\n\t\t\t\t\"Sublime Text\" : \"https://www.sublimetext.com\"\r\n\t\t\t\t\"Jeremy Ashkenas\" : \"https://sv.wikipedia.org/wiki/Jeremy_Ashkenas\"\r\n\t\t\t\t\"Lauren McCarthy\" : \"http://lauren-mccarthy.com/\"\r\n\t\t\t\t\"Brendan Eich\" : \"https://en.wikipedia.org/wiki/Brendan_Eich\"\r\n\r\n#########################\r\n\t\"A0: One Parameter\" :\r\n#########################\r\n\r\n\t\tTure :\r\n\t\t\tb: \"\"\"\r\n# Maskinen Ture är trasig! Ture är ledsen. Du måste laga Ture!\r\n# Skickar man in en etta till Ture ska en etta komma ut.\r\n# Just nu skickar Ture alltid ut nollor. Ture har hakat upp sig!\r\n# Namnet på det man skickar in till Ture står mellan parenteserna. Namnet är x.\r\n# x kan vara olika saker. Ibland en nolla och ibland en etta.\r\n# Efter pilen talar man om vad som ska komma ut från Ture.\r\n#   Den gula kolumnen innehåller det som skickas in till Ture.\r\n#   Den gröna kolumnen innehåller det som ska komma ut ur Ture.\r\n#   Den röda kolumnen innehåller det som kommer ut ur Ture, just nu.\r\n# Se till att göra de RÖDA cellerna GRÖNA!\r\n# Tryck nu på PgDn och gör Ture glad igen!\r\n#   Ändra nollan till en etta. Nu skickas bara ettor ut och inga nollor.\r\n#   Ändra ettan till ett x.    Nu är allt som det ska och Ture är glad igen!\r\n# Gå till nästa uppgift genom att klicka på Wilma i listan till vänster.\r\n\r\nTure = (x) -> 0\r\n\"\"\"\r\n\t\t\ta: \"Ture = (x) -> x\"\r\n\t\t\tc:\r\n\t\t\t\t\"Ture 0\" : 0\r\n\t\t\t\t\"Ture 1\" : 1\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tWilma:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# Om man skickar en sjua till Wilma ska det komma tillbaks en åtta.\r\n\t\t\t# Om man skickar en åtta till Wilma ska det komma tillbaks en nia.\r\n\t\t\t# Vad ska Wilma skicka tillbaks om det kommer in ett x ?\r\n\t\t\t# Tabellen längst ner innehåller lite ledtrådar.\r\n\r\n\t\t\tWilma = (x) -> x\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Wilma = (x) -> x+1\"\r\n\t\t\tc:\r\n\t\t\t\t\"Wilma 7\" : 8\r\n\t\t\t\t\"Wilma 8\" : 9\r\n\t\t\td:\r\n\t\t\t\t\"7 + 1\" : 8\r\n\t\t\t\t\"8 + 1\" : 9\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tNoel:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# Någon av dessa löser problemet: + *\r\n\r\n\t\t\tNoel = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Noel = (x) -> 2*x\"\r\n\t\t\tc:\r\n\t\t\t\t\"Noel 5\" : 10\r\n\t\t\t\t\"Noel 6\" : 12\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tGreta:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# *\r\n\r\n\t\t\tGreta = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Greta = (x) -> x*x\"\r\n\t\t\tc:\r\n\t\t\t\t\"Greta 1\" : 1\r\n\t\t\t\t\"Greta 2\" : 4\r\n\t\t\t\t\"Greta 3\" : 9\r\n\t\t\t\t\"Greta 4\" : 16\r\n\t\t\t\t\"Greta 5\" : 25\r\n\t\t\td:\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tViktor:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# -\r\n\r\n\t\t\tViktor = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Viktor = (x) -> -x\"\r\n\t\t\tc:\r\n\t\t\t\t\"Viktor -4\" : 4\r\n\t\t\t\t\"Viktor 3\" : -3\r\n\t\t\td:\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tSabrina:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# -\r\n\r\n\t\t\tSabrina = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Sabrina = (x) -> x-2\"\r\n\t\t\tc:\r\n\t\t\t\t\"Sabrina 7\" : 5\r\n\t\t\t\t\"Sabrina 17\" : 15\r\n\t\t\td:\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tDavid:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# /\r\n\r\n\t\t\tDavid = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"David = (x) -> x/2\"\r\n\t\t\tc:\r\n\t\t\t\t\"David 8\" : 4\r\n\t\t\t\t\"David 6\" : 3\r\n\t\t\td:\r\n\t\t\t\t\"6 / 3\" : 2\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tGabriella:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# %\r\n\r\n\t\t\tGabriella = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Gabriella = (x) -> x % 2\"\r\n\t\t\tc:\r\n\t\t\t\t\"Gabriella 7\" : 1\r\n\t\t\t\t\"Gabriella 8\" : 0\r\n\t\t\t\t\"Gabriella 9\" : 1\r\n\t\t\t\t\"Gabriella 10\" : 0\r\n\t\t\td:\r\n\t\t\t\t\"0 % 3\" : 0\r\n\t\t\t\t\"1 % 3\" : 1\r\n\t\t\t\t\"2 % 3\" : 2\r\n\t\t\t\t\"3 % 3\" : 0\r\n\t\t\t\t\"4 % 3\" : 1\r\n\t\t\t\t\"5 % 3\" : 2\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tBeppe:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# ==\r\n\r\n\t\t\tBeppe = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Beppe = (x) -> x == 2\"\r\n\t\t\tc:\r\n\t\t\t\t\"Beppe 1\" : false\r\n\t\t\t\t\"Beppe 2\" : true\r\n\t\t\t\t\"Beppe 3\" : false\r\n\t\t\t\t\"Beppe 4\" : false\r\n\t\t\td:\r\n\t\t\t\t\"1 == 0\" : false\r\n\t\t\t\t\"1 == 1\" : true\r\n\t\t\t\t\"1 == 2\" : false\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tKarolina:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# >\r\n\r\n\t\t\tKarolina = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Karolina = (x) -> x > 2\"\r\n\t\t\tc:\r\n\t\t\t\t\"Karolina 1\" : false\r\n\t\t\t\t\"Karolina 2\" : false\r\n\t\t\t\t\"Karolina 3\" : true\r\n\t\t\t\t\"Karolina 4\" : true\r\n\t\t\td:\r\n\t\t\t\t\"0 > 1\" : false\r\n\t\t\t\t\"1 > 1\" : false\r\n\t\t\t\t\"2 > 1\" : true\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tKasper:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# >=\r\n\r\n\t\t\tKasper = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Kasper = (x) -> x >= 3\"\r\n\t\t\tc:\r\n\t\t\t\t\"Kasper 1\" : false\r\n\t\t\t\t\"Kasper 2\" : false\r\n\t\t\t\t\"Kasper 3\" : true\r\n\t\t\t\t\"Kasper 4\" : true\r\n\t\t\td:\r\n\t\t\t\t\"1 >= 2\" : false\r\n\t\t\t\t\"2 >= 2\" : true\r\n\t\t\t\t\"3 >= 2\" : true\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tMiranda:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# !=\r\n\r\n\t\t\tMiranda = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"Miranda = (x) -> x != 2\"\r\n\t\t\tc:\r\n\t\t\t\t\"Miranda 1\" : true\r\n\t\t\t\t\"Miranda 2\" : false\r\n\t\t\t\t\"Miranda 3\" : true\r\n\t\t\t\t\"Miranda 4\" : true\r\n\t\t\td:\r\n\t\t\t\t\"1 != 0\" : true\r\n\t\t\t\t\"1 != 1\" : false\r\n\t\t\t\t\"1 != 2\" : true\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n#########################\r\n\t\"A1: Two Parameters\" :\r\n#########################\r\n\r\n\t\tOperator1:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / % **\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a*b\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 3,4\" : 12\r\n\t\t\t\t\"g 4,6\" : 24\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2*2*2\" : 8\r\n\t\t\t\t\"3*3\" : 9\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator2:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / %\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a+b\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 3,4\" : 7\r\n\t\t\t\t\"g 4,6\" : 10\r\n\t\t\t\t\"g 4,7\" : 11\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator3:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / %\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> b-a\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 3,4\" : 1\r\n\t\t\t\t\"g 4,6\" : 2\r\n\t\t\t\t\"g 4,7\" : 3\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator4:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / %\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a/b\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 8,4\" : 2\r\n\t\t\t\t\"g 12,3\" : 4\r\n\t\t\t\t\"g 12,2\" : 6\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator5:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / %\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a%b\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 8,4\" : 0\r\n\t\t\t\t\"g 9,4\" : 1\r\n\t\t\t\t\"g 10,4\" : 2\r\n\t\t\t\t\"g 11,4\" : 3\r\n\t\t\t\t\"g 11,5\" : 1\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator6:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / % ==\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a == b\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 0,0\" : true\r\n\t\t\t\t\"g 1,1\" : true\r\n\t\t\t\t\"g 7,4\" : false\r\n\t\t\t\t\"g 6,4\" : false\r\n\t\t\t\t\"g 8,8\" : true\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\t\t\"2 == 3\" : false\r\n\t\t\t\t\"3 == 3\" : true\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator7:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / % ==\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a - b == 1\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 7,6\" : true\r\n\t\t\t\t\"g 5,4\" : true\r\n\t\t\t\t\"g 7,4\" : false\r\n\t\t\t\t\"g 6,4\" : false\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\t\t\"2 == 3\" : false\r\n\t\t\t\t\"3 == 3\" : true\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator8:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / % ==\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a + b == 7\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 7,0\" : true\r\n\t\t\t\t\"g 5,2\" : true\r\n\t\t\t\t\"g 7,4\" : false\r\n\t\t\t\t\"g 6,4\" : false\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\t\t\"2 == 3\" : false\r\n\t\t\t\t\"3 == 3\" : true\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator9:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + - * / % **\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a ** b\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 3,4\" : 81\r\n\t\t\t\t\"g 4,3\" : 64\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 - 2\" : 1\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\t\t\"6 / 2\" : 3\r\n\t\t\t\t\"5 % 2\" : 1\r\n\t\t\t\t\"6 % 2\" : 0\r\n\t\t\t\t\"2 ** 3\" : 8\r\n\t\t\t\t\"3 ** 2\" : 9\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator10:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + *\r\n\r\n\t\t\tg = (a,b) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"g = (a,b) -> a * a + b * b\"\r\n\t\t\tc:\r\n\t\t\t\t\"g 0,1\" : 1\r\n\t\t\t\t\"g 1,2\" : 5\r\n\t\t\t\t\"g 2,3\" : 13\r\n\t\t\t\t\"g 3,4\" : 25\r\n\t\t\t\t\"g 3,5\" : 34\r\n\t\t\td:\r\n\t\t\t\t\"3 + 2\" : 5\r\n\t\t\t\t\"3 * 2\" : 6\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator11:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + *\r\n\r\n\t\t\tg = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\"\r\ng = (x) -> x + 1\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"g(g(0))\" : 2\r\n\t\t\t\t\"g(g(10))\" : 12\r\n\t\t\t\t\"g(g(g(0)))\" : 3\r\n\t\t\t\t\"g g g 10\" : 13\r\n\t\t\td:\r\n\t\t\t\t\"0 + 1 + 1\" : 2\r\n\t\t\t\t\"10 + 1 + 1\" : 12\r\n\t\t\t\t\"0 + 1 + 1 + 1\" : 3\r\n\t\t\t\t\"10 + 1 + 1 + 1\" : 13\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n\t\tOperator12:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# + *\r\n\r\n\t\t\tf = (x) ->\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\"\r\nf = (x) -> x * 2\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f(f(0))\" : 0\r\n\t\t\t\t\"f(f(1))\" : 4\r\n\t\t\t\t\"f f f 1\" : 8\r\n\t\t\te:\r\n\t\t\t\toperators : \"https://www.w3schools.com/jsref/jsref_operators.asp\"\r\n\r\n#########################\r\n\t'A2: range lerp for' :\r\n#########################\r\n\r\n\t\trange:\r\n\t\t\tb:\"\"\"\r\n# LOC:3 range []\r\n\r\n# Jämförelse med for loop i Javascript:\r\n# for (i=0;     i<stopp; i+=1)        motsvarar    range stopp\r\n# for (i=start; i<stopp; i+=1)        motsvarar    range start,stopp\r\n# for (i=start; i<stopp; i+=steg)     motsvarar    range start,stopp,steg\r\n# for (i=start; i>stopp; i+=steg)     motsvarar    range start,stopp,steg  (negativt steg)\r\n\r\nf = (stopp) -> []\r\ng = (start,stopp) -> []\r\nh = (start,stopp,steg) -> []\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nf = (stopp)\t           -> range stopp\r\ng = (start,stopp)      -> range start,stopp\r\nh = (start,stopp,steg) -> range start,stopp,steg\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 5\" : [0,1,2,3,4]\r\n\t\t\t\t\"f 6\" : [0,1,2,3,4,5]\r\n\t\t\t\t\"g 1,5\" : [1,2,3,4]\r\n\t\t\t\t\"g 2,4\" : [2,3]\r\n\t\t\t\t\"g 4,2\" : []\r\n\t\t\t\t\"g -2,0\" : [-2,-1]\r\n\t\t\t\t\"h 0,10,1\" : [0,1,2,3,4,5,6,7,8,9]\r\n\t\t\t\t\"h 9,-1,-1\" : [9,8,7,6,5,4,3,2,1,0]\r\n\t\t\t\t\"h 0,-10,-1\" : [0,-1,-2,-3,-4,-5,-6,-7,-8,-9]\r\n\t\t\t\t\"h -9,1,1\" : [-9,-8,-7,-6,-5,-4,-3,-2,-1,0]\r\n\t\t\t\t\"h 0,10,2\" : [0,2,4,6,8]\r\n\t\t\td:\r\n\t\t\t\t\"range 3\" : [0,1,2]\r\n\t\t\t\t\"range 1,4\" : [1,2,3]\r\n\t\t\t\t\"range 1,9,2\" : [1,3,5,7]\r\n\t\t\te:\r\n\t\t\t\trange : \"http://underscorejs.org/#range\"\r\n\r\n\t\t\"lerp\":\r\n\t\t\tb:\"\"\"\r\n# LOC:1 lerp + - * /\r\n# Försök lösa uppgiften både med och utan lerp\r\n\r\nf = (a,b,i) -> 0\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nf = (a,b,i) -> lerp a,b,i\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 10,20,0\" : 10\r\n\t\t\t\t\"f 10,20,1\" : 20\r\n\t\t\t\t\"f 10,20,2\" : 30\r\n\t\t\t\t\"f 10,20,0.5\" : 15\r\n\t\t\t\t\"f 10,20,-1\" : 0\r\n\t\t\td:\r\n\t\t\t\t\"lerp 8,12,0\" : 8\r\n\t\t\t\t\"lerp 8,12,1\" : 12\r\n\t\t\t\t\"lerp 8,12,0.5\" : 10\r\n\t\t\t\t\"lerp 8,12,-1\" : 4\r\n\t\t\t\t\"lerp 8,12,2\" : 16\r\n\t\t\te:\r\n\t\t\t\tlerp : \"https://p5js.org/reference/#/p5/lerp\"\r\n\r\n\t\t\"for\":\r\n\t\t\tb:\"\"\"\r\n# LOC:1 for in range lerp []\r\n# Försök lösa uppgiften både med och utan lerp\r\n\r\nf = (a,b,n) -> []\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nf = (a,b,n) -> lerp a,b,i for i in range n\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 0,0,5\" : [0,0,0,0,0]\r\n\t\t\t\t\"f 1,2,5\" : [1,2,3,4,5]\r\n\t\t\t\t\"f 5,4,5\" : [5,4,3,2,1]\r\n\t\t\t\t\"f -1,-2,5\" : [-1,-2,-3,-4,-5]\r\n\t\t\t\t\"f 5,25,10\" : [5,25,45,65,85,105,125,145,165,185]\r\n\t\t\t\t\"f -0.1,0.0,3\" : [-0.1,0.0,0.1]\r\n\t\t\td:\r\n\t\t\t\t\"(i*i for i in range 5)\" : [0,1,4,9,16]\r\n\t\t\te:\r\n\t\t\t\trange : \"http://underscorejs.org/#range\"\r\n\r\n\t\tRoulette:\r\n\t\t\tb:\"\"\"\r\n# LOC:13 [] .. range for in concat when == % if then else length /\r\n\r\nL18 = []\r\nH18 = []\r\nODD = []\r\nEVEN = []\r\nL12 = []\r\nM12 = []\r\nH12 = []\r\nLCOL = []\r\nMCOL = []\r\nRCOL = []\r\nRED = []\r\nBLACK = []\r\n\r\nprofit = (numbers,winner) ->\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nL18 = [1..18]\r\nH18 = [19..36]\r\nODD = range 1,37,2\r\nEVEN = range 2,37,2\r\nRED = (i for i in [1..10].concat [19..28] when i%2==1).concat (i for i in [11..18].concat [29..36] when i%2==0)\r\nBLACK = (i for i in [1..36] when i not in RED)\r\nL12 = [1..12]\r\nM12 = [13..24]\r\nH12 = [25..36]\r\nLCOL = range 1,37,3\r\nMCOL = range 2,37,3\r\nRCOL = range 3,37,3\r\n\r\nprofit = (numbers,winner) -> if winner in numbers then 36 / numbers.length else 0\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"profit [1], 1\" : 36\r\n\t\t\t\t\"profit [1,2], 1\": 18\r\n\t\t\t\t\"profit [1,2,3], 1\": 12\r\n\t\t\t\t\"profit [1,2,4,5], 1\": 9\r\n\t\t\t\t\"profit [1,2,3,4,5,6], 1\": 6\r\n\t\t\t\t\"profit L12, 1\": 3\r\n\t\t\t\t\"profit LCOL, 1\": 3\r\n\t\t\t\t\"profit L18, 1\": 2\r\n\t\t\t\t\"profit RED, 1\": 2\r\n\t\t\t\t\"profit ODD, 1\": 2\r\n\t\t\t\t\"profit [1], 36\" : 0\r\n\t\t\t\t\"profit [1,2], 36\": 0\r\n\t\t\t\t\"profit [1,2,3], 36\": 0\r\n\t\t\t\t\"profit [1,2,4,5], 36\": 0\r\n\t\t\t\t\"profit [1,2,3,4,5,6], 36\": 0\r\n\t\t\t\t\"profit L12, 36\": 0\r\n\t\t\t\t\"profit LCOL, 36\": 0\r\n\t\t\t\t\"profit L18, 36\": 0\r\n\t\t\t\t\"profit BLACK, 36\": 0\r\n\t\t\t\t\"profit ODD, 36\": 0\r\n\t\t\te:\r\n\t\t\t\t\"Roulette\" : \"https://qph.ec.quoracdn.net/main-qimg-0aeb011835c7633bf0961eae5c965708-c\"\r\n\r\n#########################\r\n\t\"A3: [ ]\" :\r\n#########################\r\n\r\n\t\tIntroduktion:\r\n\t\t\tb:\"\"\"\r\n# LOC:6 length concat .. []\r\n\r\nantal = (a) -> 0\r\nfetch = (a,i) -> 0\r\nkonkatenera = (a,b) -> []\r\nförsta = (a,n) -> []\r\nmitti = (a,i,j) -> []\r\nsista = (a,n) -> []\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nantal = (a) -> a.length\r\nfetch = (a,i) -> a[i]\r\nkonkatenera = (a,b) -> a.concat b\r\nförsta = (a,n) -> a[..n-1]\r\nmitti = (a,i,j) -> a[i..j]\r\nsista = (a,n) -> a[-n..]\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"antal [1,2,3]\" : 3\r\n\t\t\t\t\"antal [5,4,1,2,9,3,7]\" : 7\r\n\t\t\t\t\"fetch [4,5,6],0\" : 4\r\n\t\t\t\t\"fetch [4,5,6],2\" : 6\r\n\t\t\t\t\"konkatenera [1,2,3],[4,5,6]\" : [1,2,3,4,5,6]\r\n\t\t\t\t\"första [11,12,13,14,15],3\" : [11,12,13]\r\n\t\t\t\t\"mitti [11,12,13,14,15],1,2\" : [12,13]\r\n\t\t\t\t\"sista [11,12,13,14,15],4\" : [12,13,14,15]\r\n\t\t\td:\r\n\t\t\t\t\"[2,11,3,56,62][0]\" : 2\r\n\t\t\t\t\"_.first [2,11,3,56,62]\" : 2\r\n\t\t\t\t\"_.last [2,11,3,56,62]\" : 62\r\n\t\t\t\t\"[2,11,3,56,62][3]\" : 56\r\n\t\t\t\t\"[2,11,3,56,62].length\" : 5\r\n\t\t\t\t\"[2,11,3,56,62][2]\" : 3\r\n\t\t\t\t\"[2,11,3,56,62][..2]\" : [2,11,3]\r\n\t\t\t\t\"[2,11,3,56,62][1..]\" : [11,3,56,62]\r\n\t\t\t\t\"[2,11,3,56,62][1..2]\" : [11,3]\r\n\t\t\t\t\"_.min [2,11,3,56,62]\" : 2\r\n\t\t\t\t\"_.max [2,11,3,56,62]\" : 62\r\n\t\t\t\t\"_.contains [2,11,3,56,62], 3\" : true\r\n\t\t\t\t\"[2,11,3,56,62].indexOf 62\" : 4\r\n\t\t\t\t\"[2,11,3,56,62].reverse()\" : [62,56,3,11,2]\r\n\t\t\t\t\"[1,2].concat [3,4]\" : [1,2,3,4]\r\n\t\t\te:\r\n\t\t\t\t\"[ ]\" : \"https://www.w3schools.com/js/js_arrays.asp\"\r\n\r\n\t\tNim:\r\n\t\t\tb:\"\"\"\r\n# LOC:5 < ^ sort if then else []\r\n\r\n# NIM är ett tvåmansspel\r\n# Tag minst en sticka ur en av tre högar\r\n# Sista stickan vinner\r\n\r\nnim = ([a,b,c]) -> [a,b,c]\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nnim = ([a,b,c]) -> \r\n\tif (b^c) < a then return sort [b^c,b,c]\r\n\tif (a^c) < b then return sort [a,a^c,c]\r\n\tif (a^b) < c then return sort [a,b,a^b]\r\n\tsort [a,b,c-1]\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"nim [0,0,1]\" : [0,0,0]\r\n\t\t\t\t\"nim [0,0,2]\" : [0,0,0]\r\n\t\t\t\t\"nim [0,3,3]\" : [0,2,3]\r\n\t\t\t\t\"nim [1,2,3]\" : [1,2,2]\r\n\t\t\t\t\"nim [1,2,4]\" : [1,2,3]\r\n\t\t\t\t\"nim [1,3,4]\" : [1,2,3]\r\n\t\t\t\t\"nim [1,3,5]\" : [1,2,3]\r\n\t\t\t\t\"nim [2,3,5]\" : [1,2,3]\r\n\t\t\t\t\"nim [2,4,7]\" : [2,4,6]\r\n\t\t\t\t\"nim [2,5,6]\" : [2,4,6]\r\n\t\t\t\t\"nim [3,4,5]\" : [1,4,5]\r\n\t\t\t\t\"nim [3,4,6]\" : [2,4,6]\r\n\t\t\t\t\"nim [5,6,7]\" : [1,6,7]\r\n\t\t\td:\r\n\t\t\t\t\"0^0\" : 0\r\n\t\t\t\t\"0^1\" : 1\r\n\t\t\t\t\"1^0\" : 1\r\n\t\t\t\t\"1^1\" : 0\r\n\t\t\t\t\"0^2\" : 2\r\n\t\t\t\t\"2^0\" : 2\r\n\t\t\t\t\"2^2\" : 0\r\n\t\t\t\t\"1^2\" : 3\r\n\t\t\t\t\"1^2^3\" : 0\r\n\t\t\t\t\"1^3^4\" : 6\r\n\t\t\t\t\"1^4^5\" : 0\r\n\t\t\t\t\"1^5^6\" : 2\r\n\t\t\te:\r\n\t\t\t\tNim : \"https://en.wikipedia.org/wiki/Nim\"\r\n\t\t\t\txor : \"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\"\r\n\t\t\t\tNimrod : \"https://en.wikipedia.org/wiki/Nimrod_(computing)\"\r\n\r\n\t\tSort:\r\n\t\t\tb:\"\"\"\r\n# LOC:16 if < then else []\r\n# Sortera UTAN att använda loopar\r\n# Sortera UTAN att använda någon färdig sorteringsrutin\r\n\r\nsort2 = (a,b) -> [a,b]\r\nsort3 = (a,b,c) -> [a,b,c]\r\nsort4 = (a,b,c,d) -> [a,b,c,d]\r\nsort5 = (a,b,c,d,e) -> [a,b,c,d,e]\r\n\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nsort2 = (a,b) -> if a>b then [b,a] else [a,b]\r\n\r\nsort3 = (a,b,c) ->\r\n\t[a,b] = sort2 a,b\r\n\t[b,c] = sort2 b,c\r\n\t[a,b] = sort2 a,b\r\n\t[a,b,c]\r\n\r\nsort4 = (a,b,c,d) ->\r\n\t[a,b,c] = sort3 a,b,c\r\n\t[b,c,d] = sort3 b,c,d\r\n\t[a,b] = sort2 a,b\r\n\t[a,b,c,d]\r\n\r\nsort5 = (a,b,c,d,e) ->\r\n\t[a,b,c,d] = sort4 a,b,c,d\r\n\t[b,c,d,e] = sort4 b,c,d,e\r\n\t[a,b] = sort2 a,b\r\n\t[a,b,c,d,e]\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"sort2 11,2\" : [2,11]\r\n\t\t\t\t\"sort2 2,11\" : [2,11]\r\n\r\n\t\t\t\t\"sort3 11,4,5\" : [4,5,11]\r\n\t\t\t\t\"sort3 11,5,4\" : [4,5,11]\r\n\t\t\t\t\"sort3 4,11,5\" : [4,5,11]\r\n\t\t\t\t\"sort3 4,5,11\" : [4,5,11]\r\n\t\t\t\t\"sort3 5,11,4\" : [4,5,11]\r\n\t\t\t\t\"sort3 5,4,11\" : [4,5,11]\r\n\r\n\t\t\t\t\"sort4 11,4,5,6\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 11,4,6,5\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 11,5,4,6\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 11,5,6,4\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 11,6,4,5\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 11,6,5,4\" : [4,5,6,11]\r\n\r\n\t\t\t\t\"sort4 4,11,5,6\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 4,11,6,5\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 4,5,11,6\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 4,5,6,11\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 4,6,11,5\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 4,6,5,11\" : [4,5,6,11]\r\n\r\n\t\t\t\t\"sort4 5,11,4,6\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 5,11,6,4\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 5,4,11,6\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 5,4,6,11\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 5,6,11,4\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 5,6,4,11\" : [4,5,6,11]\r\n\r\n\t\t\t\t\"sort4 6,11,4,5\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 6,11,5,4\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 6,4,11,5\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 6,4,5,11\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 6,5,11,4\" : [4,5,6,11]\r\n\t\t\t\t\"sort4 6,5,4,11\" : [4,5,6,11]\r\n\r\n\t\t\t\t\"sort5 5,4,11,2,1\" : [1,2,4,5,11]\r\n\t\t\t\t\"sort5 11,5,2,4,1\" : [1,2,4,5,11]\r\n\t\t\t\t\"sort5 5,2,11,4,1\" : [1,2,4,5,11]\r\n\t\t\td:\r\n\t\t\t\t\"if 11 < 2 then [11,2] else [2,11]\" : [2,11]\r\n\r\n\r\n\t\tVäxelcykel :\r\n\t\t\tb: \"\"\"\r\n# LOC:5 [] for in push bsort - /\r\n# Din växelcykel har stora och små kugghjul. I vilken ordning ligger växlarna?\r\n\r\ngear = (big, small, index) -> []\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\ngear = (big, small, index) ->\r\n\tres = []\r\n\tres.push [Math.round(b/s * 100)/100,b,s] for s in small for b in big\r\n\tbsort res\r\n\tres[index]\r\n\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"gear [43,53], [13,21], 0\" : [2.05,43,21]\r\n\t\t\t\t\"gear [43,53], [13,21], 1\" : [2.52,53,21]\r\n\t\t\t\t\"gear [43,53], [13,21], 2\" : [3.31,43,13]\r\n\t\t\t\t\"gear [43,53], [13,21], 3\" : [4.08,53,13]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 0\" : [2.05,43,21]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 1\" : [2.26,43,19]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 2\" : [2.52,53,21]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 3\" : [2.53,43,17]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 4\" : [2.79,53,19]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 5\" : [2.87,43,15]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 6\" : [3.12,53,17]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 7\" : [3.31,43,13]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 8\" : [3.53,53,15]\r\n\t\t\t\t\"gear [43,53], [13,15,17,19,21], 9\" : [4.08,53,13]\r\n\t\t\td:\r\n\t\t\t\t\"Math.round 3.1415\" : 3\r\n\t\t\t\t\"Math.round(3.1415 * 10)/10\" : 3.1\r\n\t\t\te:\r\n\t\t\t\t\"Gear ratios\" : \"https://cyclingtips.com/2014/08/beyond-the-big-ring-understanding-gear-ratios-and-why-they-matter/\"\r\n\r\n\t\tSingaporeMath :\r\n\t\t\tb: \"\"\"\r\n# LOC:7 [] int if % / * in concat\r\n# Uttryck talet n som summan av en lista med \r\n# tal bestående enbart av siffrorna 0 till 5\r\n# Listan ska vara den kortast möjliga listan\r\n# Vid lika längd: listan med flest nollor\r\n\r\nf = (n) -> \r\n\t[]\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\n# rekursiv lösning:\r\nf = (n,faktor=1) ->\r\n\tif n==0 then return []\r\n\tdigit = n % 10\r\n\tn = int n / 10\r\n\tif digit==0 then return\tf n, faktor*10\r\n\tif digit<=5 then return f(n, faktor*10).concat [digit*faktor]\r\n\tf(n+1, faktor*10).concat [(digit-10)*faktor]\r\n\r\n# iterativ lösning:\r\n# f = (n) ->\r\n# \tres = []\r\n# \tfaktor = 1\r\n# \twhile n>0\r\n# \t\tdigit = n % 10\r\n# \t\tn = int n / 10\r\n# \t\tif digit==0 \r\n# \t\telse if digit<=5 then res.unshift digit*faktor\r\n# \t\telse\r\n# \t\t\tres.unshift (digit-10)*faktor\r\n# \t\t\tn += 1\r\n# \t\tfaktor *= 10\r\n# \tres\t\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 0\" : []\r\n\t\t\t\t\"f 5\" : [5]\r\n\t\t\t\t\"f 6\" : [10,-4]\r\n\t\t\t\t\"f 9\" : [10,-1]\r\n\t\t\t\t\"f 10\" : [10]\r\n\t\t\t\t\"f 19\" : [20,-1]\r\n\t\t\t\t\"f 55\" : [50,5]\r\n\t\t\t\t\"f 56\" : [100,-40,-4]\r\n\t\t\t\t\"f 99\" : [100,-1]\r\n\t\t\t\t\"f 678\" : [1000,-300,-20,-2]\r\n\t\t\t\t\"f 1234\" : [1000,200,30,4]\r\n\t\t\t\t\"f 98765\" : [100000,-1000,-200,-40,5]\r\n\r\n\r\n#########################\r\n\t\"A4: { }\" :\r\n#########################\r\n\r\n\t\t\"Boys and Girls\" :\r\n\t\t\tb : \"\"\"\r\n# LOC:7 {} [] for in length + /\r\n\r\ngirls = [{name: 'Sabrina', age: 12}, {name: 'Helene', age: 10}, {name: 'Anna', age: 11}]\r\nboys = [{name: 'David', age: 10}, {name: 'Henry', age: 11}, {name: 'Noel', age: 14}, {name: 'Numa', age: 3}]\r\n\r\ngirl = girls[0]\r\n\r\nnames = (kids) -> []\r\nages = (kids) -> []\r\nsum = (numbers) -> 0\r\nantal = (numbers) -> 0\r\navg = (numbers) -> 0\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\ngirls = [{name: 'Sabrina', age: 12}, {name: 'Helene', age: 10}, {name: 'Anna', age: 11}]\r\nboys = [{name: 'David', age: 10}, {name: 'Henry', age: 11}, {name: 'Noel', age: 14}, {name: 'Numa', age: 3}]\r\n\r\nnames = (kids) -> kid.name for kid in kids\r\n\r\nages = (kids) -> kid.age for kid in kids\r\n\r\nsum = (numbers) ->\r\n\tres = 0\r\n\tres += n for n in numbers\r\n\tres\r\n\r\nantal = (numbers) -> numbers.length\r\n\r\navg = (numbers) -> sum(numbers) / antal(numbers)\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"names girls\" : ['Sabrina', 'Helene', 'Anna']\r\n\t\t\t\t\"names boys\" : ['David', 'Henry', 'Noel','Numa']\r\n\t\t\t\t\"ages girls\" : [12,10,11]\r\n\t\t\t\t\"ages boys\" : [10,11,14,3]\r\n\t\t\t\t\"sum ages girls\" : 33\r\n\t\t\t\t\"sum ages boys\" : 38\r\n\t\t\t\t\"antal girls\" : 3\r\n\t\t\t\t\"antal boys\" : 4\r\n\t\t\t\t\"avg ages girls\" : 11\r\n\t\t\t\t\"avg ages boys\" : 9.5\r\n\t\t\td:\r\n\t\t\t\t\"girl\" : {name: 'Sabrina', age: 12}\r\n\t\t\t\t\"girl['name']\" : \"Sabrina\"\r\n\t\t\t\t\"girl.name\" : \"Sabrina\"\r\n\t\t\t\t\"girl['age']\" : 12\r\n\t\t\t\t\"girl.age\" : 12\r\n\t\t\t\t\"girls.length\" : 3\r\n\t\t\t\t\"_.size girl\" : 2\r\n\t\t\t\t\"_.keys girl\" : ['name','age']\r\n\t\t\t\t\"_.values girl\" : ['Sabrina',12]\r\n\t\t\t\t\"_.pairs girl\" : [['name', 'Sabrina'], ['age', 12]]\r\n\t\t\te:\r\n\t\t\t\t\"{ }\" :\"https://www.w3schools.com/js/js_objects.asp\"\r\n\r\n\t\tEarth :\r\n\t\t\tb:\"\"\"\r\n# LOC:7\r\n\r\nearth =\r\n\teurope :\r\n\t\tsweden : 10\r\n\t\tdenmark : 5\r\n\tasia :\r\n\t\tchina : 1300\r\n\t\tindia : 1500\r\n\t\tjapan : 120\r\n\r\nf = ->\r\ng = ->\r\nh = -> earth.europe.sweden\r\nk = ->\r\nl = ->\r\nm = ->\r\nn = ->\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nearth =\r\n\teurope :\r\n\t\tsweden : 10\r\n\t\tdenmark : 5\r\n\tasia :\r\n\t\tchina : 1300\r\n\t\tindia : 1500\r\n\t\tjapan : 120\r\n\r\nf = -> earth\r\ng = -> earth.europe\r\nh = -> earth.europe.sweden\r\nk = -> earth.asia\r\nl = -> earth.asia.china\r\nm = -> earth.asia.india\r\nn = -> earth.asia.japan\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f()\" : {\"europe\":{\"sweden\":10,\"denmark\":5},\"asia\":{\"china\":1300,\"india\":1500,\"japan\":120}}\r\n\t\t\t\t\"g()\" : {\"sweden\":10,\"denmark\":5}\r\n\t\t\t\t\"h()\" : 10\r\n\t\t\t\t\"k()\" : {\"china\":1300,\"india\":1500,\"japan\":120}\r\n\t\t\t\t\"l()\" : 1300\r\n\t\t\t\t\"m()\" : 1500\r\n\t\t\t\t\"n()\" : 120\r\n\r\n\t\tGlosor :\r\n\t\t\tb:\"\"\"\r\n# LOC:6 [] _.invert\r\n\r\nSWE_ENG = {\tbord:'table',\tstol:'chair',\thund:'dog',\t katt:'cat',   selfie:'selfie', programmering:'programming' }\r\nSWE_GER = {\tbord:'Tisch',\tstol:'Stuhl',\thund:'Hund', katt:'Katze', selfie:'Selfie', programmering:'Programmierung' }\r\n\r\nswe2eng = (ord) ->\r\neng2swe = (ord) ->\r\n\r\nswe2ger = (ord) ->\r\nger2swe = (ord) ->\r\n\r\neng2ger = (ord) ->\r\nger2eng = (ord) ->\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nswe2eng = (ord) -> SWE_ENG[ord]\r\neng2swe = (ord) -> _.invert(SWE_ENG)[ord]\r\n\r\nswe2ger = (ord) -> SWE_GER[ord]\r\nger2swe = (ord) -> _.invert(SWE_GER)[ord]\r\n\r\neng2ger = (ord) -> swe2ger eng2swe ord\r\nger2eng = (ord) -> swe2eng ger2swe ord\r\n\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"swe2eng 'bord'\" : 'table'\r\n\t\t\t\t\"eng2swe 'dog'\" : 'hund'\r\n\t\t\t\t\"swe2ger 'programmering'\" : 'Programmierung'\r\n\t\t\t\t\"ger2swe 'Selfie'\" : 'selfie'\r\n\t\t\t\t\"eng2ger 'cat'\" : 'Katze'\r\n\t\t\t\t\"ger2eng 'Stuhl'\" : 'chair'\r\n\r\n\t\t\td:\r\n\t\t\t\t\"SWE_ENG['bord']\" : \"table\"\r\n\t\t\t\t\"_.invert {a:1, b:2}\" : {\"1\":\"a\",\"2\":\"b\"}\r\n\r\n\t\t\te:\r\n\t\t\t\t\"_.invert\" : \"http://underscorejs.org/#invert\"\r\n\r\n\t\t\"Glosor[]\" :\r\n\t\t\tb:\"\"\"\r\n# LOC:6 .indexOf []\r\n\r\nSWE = [\t'bord',\t 'stol',  'hund', 'katt',  'selfie', 'programmering'  ]\r\nENG = [\t'table', 'chair', 'dog',\t'cat',   'selfie', 'programming'    ]\r\nGER = [\t'Tisch', 'Stuhl', 'Hund', 'Katze', 'Selfie', 'Programmierung' ]\r\n\r\nswe2eng = (ord) ->\r\neng2swe = (ord) ->\r\n\r\nswe2ger = (ord) ->\r\nger2swe = (ord) ->\r\n\r\neng2ger = (ord) ->\r\nger2eng = (ord) ->\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nswe2eng = (ord) -> ENG[SWE.indexOf(ord)]\r\neng2swe = (ord) -> SWE[ENG.indexOf(ord)]\r\n\r\nswe2ger = (ord) -> GER[SWE.indexOf(ord)]\r\nger2swe = (ord) -> SWE[GER.indexOf(ord)]\r\n\r\neng2ger = (ord) -> GER[ENG.indexOf(ord)]\r\nger2eng = (ord) -> ENG[GER.indexOf(ord)]\r\n\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"swe2eng 'bord'\" : 'table'\r\n\t\t\t\t\"eng2swe 'dog'\" : 'hund'\r\n\t\t\t\t\"swe2ger 'programmering'\" : 'Programmierung'\r\n\t\t\t\t\"ger2swe 'Selfie'\" : 'selfie'\r\n\t\t\t\t\"eng2ger 'cat'\" : 'Katze'\r\n\t\t\t\t\"ger2eng 'Stuhl'\" : 'chair'\r\n\r\n\t\t\td:\r\n\t\t\t\t\"SWE.indexOf 'katt'\" : 3\r\n\t\t\t\t\"ENG[3]\" : \"cat\"\r\n\t\t\t\t\"GER[3]\" : \"Katze\"\r\n\t\t\te:\r\n\t\t\t\tindexOf : \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"\r\n\r\n#########################\r\n\t'A5: \" \"' :\r\n#########################\r\n\r\n\t\tIntroduktion:\r\n\t\t\tb:\"\"\"\r\n# LOC:8 length [] .. + \"\" indexOf split join for in\r\n\r\nantal = (s) -> 0\r\ntecken = (s,i) -> \"\"\r\nmitti = (s,i,j) -> \"\"\r\nkonkatenera = (s,t) -> \"\"\r\nleta = (s,t) -> 0\r\nsplittra = (s,avgr) -> []\r\nhopslagning = (a,avgr='') -> \"\"\r\ndubbla = (s) -> \"\"\r\n\t\t\t\"\"\"\r\n\t\t\ta:\"\"\"\r\nantal = (s) -> s.length\r\ntecken = (s,i) -> s[i]\r\nmitti = (s,i,j) -> s[i..j]\r\nkonkatenera = (s,t) -> s + t\r\nleta = (s,t) -> s.indexOf t\r\nsplittra = (s,avgr) -> s.split avgr\r\nhopslagning = (a,avgr='') -> a.join(avgr)\r\ndubbla = (s) -> hopslagning (tecken + tecken for tecken in s)\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t'antal \"Coffee\"' : 6\r\n\t\t\t\t'tecken \"Coffee\",1' : 'o'\r\n\t\t\t\t'mitti \"Coffee\",1,3' : 'off'\r\n\t\t\t\t'mitti \"Coffee\",3,5' : 'fee'\r\n\t\t\t\t'konkatenera \"Coffee\",\"script\"' : 'Coffeescript'\r\n\t\t\t\t'leta \"Coffee\",\"e\"' : 4\r\n\t\t\t\t'leta \"Coffee\",\"x\"' : -1\r\n\t\t\t\t\"splittra '2 3 +',' '\" : ['2', '3', '+']\r\n\t\t\t\t\"hopslagning ['2', '3', '+'], '|'\" : \"2|3|+\"\r\n\t\t\t\t'dubbla \"script\"' : 'ssccrriipptt'\r\n\t\t\td:\r\n\t\t\t\t'\"Javascript\".length' : 10\r\n\t\t\t\t'\"Javascript\".indexOf \"a\"' : 1\r\n\t\t\t\t'\"1,2,3\".split \",\"' : [\"1\",\"2\",\"3\"]\r\n\t\t\t\t'[\"1\",\"2\",\"3\"].join \" \"' : \"1 2 3\"\r\n\t\t\te:\r\n\t\t\t\t'\" \"' : \"https://www.w3schools.com/jsref/jsref_obj_string.asp\"\r\n\t\t\t\tsplit: \"http://coffeescript-cookbook.github.io/chapters/strings/splitting-a-string\"\r\n\t\t\t\tjoin : \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"\r\n\t\t\t\tindexOf : \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"\r\n\r\n\t\tPalindrom :\r\n\t\t\tb : \"\"\"\r\n\t\t\t# LOC:1 join reverse split \"\"\r\n\t\t\t# Ett palindrom blir samma ord om man vänder på det.\r\n\t\t\t# Ordet palindrom är inte ett palindrom.\r\n\r\n\t\t\tpalindrom = (word) -> null\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\npalindrom = (word) -> word.split(\"\").reverse().join(\"\") == word\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"palindrom 'badrum'\" : false\r\n\t\t\t\t\"palindrom 'kök'\" : true\r\n\t\t\t\t\"palindrom 'kajak'\" : true\r\n\t\t\t\t\"palindrom 'kanot'\" : false\r\n\t\t\te:\r\n\t\t\t\treverse : \"http://coffeescript-cookbook.github.io/chapters/arrays/reversing-arrays\"\r\n\r\n\t\tRövarspråk :\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1 for in if then else + join '' ()\r\n\r\n\t\t\trs = (word,extra='o') -> \"\"\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\nrs = (word,extra='o') -> ((if letter in 'aeiouy åäö' then letter else letter + extra + letter) for letter in word).join(\"\")\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"rs 'kalas fint'\" : 'kokalolasos fofinontot'\r\n\t\t\t\t\"rs 'bokstav'\" : 'bobokoksostotavov'\r\n\t\t\t\t\"rs 'kalas fint','i'\" : 'kikalilasis fifinintit'\r\n\t\t\t\t\"rs 'bokstav','e'\" : 'bebokeksestetavev'\r\n\t\t\t\t\"rs 'kalas fint','a'\" : 'kakalalasas fafinantat'\r\n\r\n\t\tAdvanced :\r\n\t\t\tb: \"\"\"\r\n# LOC:8 _.some _.filter _.countBy length split reverse join == and for in continue\r\n\r\nexisterar = (word) ->\r\npalindromer = (n) -> []\r\nfrekvens = () ->  {}\r\nkorsord = (pattern) -> []\r\n\r\nwords = ordlista.split \" \"\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nexisterar = (word) -> _.some words, (w) -> w==word\r\npalindromer = (n) -> _.filter words, (w) -> w.length == n and w == w.split('').reverse().join('')\r\nfrekvens = () ->  _.countBy words, \"length\"\r\nmatch = (word,pattern) ->\r\n\tfor letter,i in pattern\r\n\t\tif letter != '.' and letter != word[i] then\treturn false\r\n\ttrue\r\nkorsord = (pattern) -> _.filter words, (w) -> w.length == pattern.length and match w,pattern\r\n\r\nwords = ordlista.split \" \"\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"existerar 'ajabaja'\" : true\r\n\t\t\t\t\"existerar 'selfie'\" : false\r\n\t\t\t\t\"palindromer 4\" : [\"alla\",\"amma\",\"arra\",\"esse\"]\r\n\t\t\t\t\"palindromer 6\" : [\"tillit\"]\r\n\t\t\t\t\"palindromer 7\" : [\"ajabaja\",\"tätatät\"]\r\n\t\t\t\t\"frekvens()\" : {\"4\":2573,\"5\":4568,\"6\":6769,\"7\":10181,\"8\":13578,\"9\":14600}\r\n\t\t\t\t\"korsord 'b..l'\" : [\"ball\", \"bill\", \"boll\", \"bröl\"]\r\n\t\t\td:\r\n\t\t\t\t\"words.length\" : 52269\r\n\t\t\t\t\"_.first words\" : \"abakus\"\r\n\t\t\t\t\"_.last words\" : \"övärld\"\r\n\t\t\te:\r\n\t\t\t\t'_.some' : \"http://underscorejs.org/#some\"\r\n\t\t\t\t'_.filter' : \"http://underscorejs.org/#filter\"\r\n\t\t\t\t'_.countBy' : \"http://underscorejs.org/#countBy\"\r\n\r\n#########################\r\n\t\"A6: Interpolation\" :\r\n#########################\r\n\r\n\t\tlinearequation1:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1 *\r\n\r\n\t\t\tf = (x) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"f = (x) -> 2 * x\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 2\" : 4\r\n\t\t\t\t\"f 3\" : 6\r\n\t\t\te:\r\n\t\t\t\t\"Linjär interpolation\" : \"https://en.wikipedia.org/wiki/Linear_interpolation\"\r\n\r\n\t\tlinearequation2:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1 * +\r\n\r\n\t\t\tf = (x) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"f = (x) -> 3 + 2 * x\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 2\" : 7\r\n\t\t\t\t\"f 3\" : 9\r\n\t\t\te:\r\n\t\t\t\t\"Linjär interpolation\" : \"https://en.wikipedia.org/wiki/Linear_interpolation\"\r\n\r\n\t\tlerp:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1 * + -\r\n\r\n\t\t\tlerp = (y1,y2,x) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"lerp = (y1,y2,x) -> y1 + (y2-y1) * x\"\r\n\t\t\tc:\r\n\t\t\t\t\"lerp 10,16,-1\" : 4\r\n\t\t\t\t\"lerp 10,16,0\" : 10\r\n\t\t\t\t\"lerp 10,16,0.5\" : 13\r\n\t\t\t\t\"lerp 10,16,1\" : 16\r\n\t\t\t\t\"lerp 10,16,2\" : 22\r\n\t\t\te:\r\n\t\t\t\t\"Linjär interpolation\" : \"https://en.wikipedia.org/wiki/Linear_interpolation\"\r\n\t\t\t\tlerp : \"https://p5js.org/reference/#/p5/lerp\"\r\n\r\n\t\tmap:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1 * + - /\r\n\r\n\t\t\tmap = (x,x1,x2,y1,y2) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"map = (x,x1,x2,y1,y2) -> y1 + (y2-y1) * (x-x1)/(x2-x1)\"\r\n\t\t\tc:\r\n\t\t\t\t\"map 0,1,3,20,40\" : 10\r\n\t\t\t\t\"map 1,1,3,20,40\" : 20\r\n\t\t\t\t\"map 2,1,3,20,40\" : 30\r\n\t\t\t\t\"map 3,1,3,20,40\" : 40\r\n\t\t\t\t\"map 75,50,100,0,1\" : 0.5\r\n\t\t\t\t\"map 16,0,40,0,200\" : 80\r\n\t\t\te:\r\n\t\t\t\tmap : \"https://p5js.org/reference/#/p5/map\"\r\n\r\n\t\tCelsiusFahrenheit:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:4 * + - / map\r\n\r\nc2f_map  = (c) -> map c,0,1,2,3\r\nf2c_map  = (f) -> map f,0,1,2,3\r\nc2f      = (c) -> 0 + 1 * c\r\nf2c      = (f) -> 0 + 1 * f\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nc2f_map = (c) -> map c,0,100,32,212\r\nf2c_map = (f) -> map f,32,212,0,100\r\nc2f = (c) -> 32 + 1.8 * c\r\nf2c = (f) -> (f-32) / 1.8\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"c2f_map 0\" : 32\r\n\t\t\t\t\"c2f_map 100\" : 212\r\n\t\t\t\t\"f2c_map 32\" : 0 \r\n\t\t\t\t\"f2c_map 212\" : 100\r\n\t\t\t\t\"c2f 0\" : 32\r\n\t\t\t\t\"c2f 100\" : 212\r\n\t\t\t\t\"f2c 32\" : 0\r\n\t\t\t\t\"f2c 212\" : 100\r\n\t\t\te:\r\n\t\t\t\tCalculator : \"http://www.rapidtables.com/convert/temperature/fahrenheit-to-celsius.htm\"\r\n\r\n\t\tHour2Degree:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1 map + - * / %\r\n\r\n\t\t\th2d = (x) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"h2d = (x) -> map(15-x,0,12,0,360) % 360\"\r\n\t\t\tc:\r\n\t\t\t\t\"h2d 0\" : 90\r\n\t\t\t\t\"h2d 1\" : 60\r\n\t\t\t\t\"h2d 2\" : 30\r\n\t\t\t\t\"h2d 3\" : 0\r\n\t\t\t\t\"h2d 4\" : 330\r\n\t\t\t\t\"h2d 5\" : 300\r\n\t\t\t\t\"h2d 6\" : 270\r\n\t\t\t\t\"h2d 7\" : 240\r\n\t\t\t\t\"h2d 8\" : 210\r\n\t\t\t\t\"h2d 9\" : 180\r\n\t\t\t\t\"h2d 10\" : 150\r\n\t\t\t\t\"h2d 11\" : 120\r\n\t\t\t\t\"h2d 12\" : 90\r\n\r\n\t\tHour2Radian:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1 map + - * / % Math.PI\r\n\r\n\t\t\th2r = (x) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta:\"\"\"\r\n\t\t\th2r = (x) -> (map x,15,3,0,2*Math.PI) % (2*Math.PI)\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"h2r 0\" : 3*Math.PI/6\r\n\t\t\t\t#\"h2r 1\" : 2*Math.PI/6  decimal problem\r\n\t\t\t\t#\"h2r 2\" : 1*Math.PI/6  decimal problem\r\n\t\t\t\t\"h2r 3\" : 0*Math.PI/6\r\n\t\t\t\t\"h2r 4\" : 11*Math.PI/6\r\n\t\t\t\t\"h2r 5\" : 10*Math.PI/6\r\n\t\t\t\t\"h2r 6\" : 9*Math.PI/6\r\n\t\t\t\t\"h2r 7\" : 8*Math.PI/6\r\n\t\t\t\t#\"h2r 8\" : 7*Math.PI/6  decimal problem\r\n\t\t\t\t\"h2r 9\" : 6*Math.PI/6\r\n\t\t\t\t\"h2r 10\" : 5*Math.PI/6\r\n\t\t\t\t\"h2r 11\" : 4*Math.PI/6\r\n\t\t\t\t\"h2r 12\" : 3*Math.PI/6\r\n\t\t\te:\r\n\t\t\t\tMath : \"https://www.w3schools.com/jsref/jsref_obj_math.asp\"\r\n\r\n\t\tAngleConversions:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:6 map\r\n\r\nk2t = (k) -> -1\r\nt2k = (t) -> -1\r\n\r\nk2g = (k) -> -1\r\ng2k = (g) -> -1\r\n\r\nt2g = (t) -> -1\r\ng2t = (g) -> -1\r\n\t\t\t\"\"\"\r\n\t\t\ta:\"\"\"\r\nk2t = (k) -> map k, 0,360, 0,12\r\nt2k = (t) -> map t, 0,12,  0,360\r\n\r\nk2g = (k) -> map k,90,0, 0,90\r\ng2k = (g) -> map g,90,0, 0,90\r\n\r\nt2g = (t) -> map t,3,0, 0,90\r\ng2t = (g) -> map g,0,90, 3,0\r\n\t\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"k2t 0\" : 0\r\n\t\t\t\t\"k2t 180\" : 6\r\n\t\t\t\t\"t2k 0\"  : 0\r\n\t\t\t\t\"t2k 6\" : 180\r\n\r\n\t\t\t\t\"k2g 90\"  : 0\r\n\t\t\t\t\"k2g 0\" : 90\r\n\t\t\t\t\"g2k 90\" : 0\r\n\t\t\t\t\"g2k 0\" : 90\r\n\r\n\t\t\t\t\"t2g 3\"  : 0\r\n\t\t\t\t\"t2g 0\" : 90\r\n\t\t\t\t\"g2t 0\"  : 3\r\n\t\t\t\t\"g2t 90\" : 0\r\n\r\n\t\t'AverageTime':\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:14 \"\" [] parseInt if * + / % split\r\n\r\n\t\t\tavg = (t1,t2) -> \"00:00\"\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\ncheckTime = (i) -> if i < 10 then \"0\" + i else i\r\navg = (t1,t2) -> \r\n\tarr1 = t1.split ':'\r\n\th1 = parseInt arr1[0]\r\n\tm1 = parseInt arr1[1]\r\n\tarr2 = t2.split ':'\r\n\th2 = parseInt arr2[0]\r\n\tm2 = parseInt arr2[1]\r\n\ti1 = 60*h1+m1\r\n\ti2 = 60*h2+m2\r\n\ti = int (i1+i2)/2\r\n\th = int i/60\r\n\tm = i % 60\r\n\tcheckTime(h) + ':' + checkTime(m)\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t'avg \"07:00\", \"15:00\"' : \"11:00\"\r\n\t\t\t\t'avg \"07:00\", \"14:00\"' : \"10:30\"\r\n\t\t\t\t'avg \"07:16\", \"15:14\"' : \"11:15\"\r\n\t\t\t\t'avg \"07:16\", \"10:56\"' : \"09:06\"\r\n\r\n#########################\r\n\t\"A7: class\" :\r\n#########################\r\n\r\n\t\tKid :\r\n\t\t\tb : \"\"\"\r\n# LOC:8 class constructor new @ [] for in length + /\r\n# Innan du löser denna uppgift: Be att få se Bouncing Balls!\r\n# LOC betyder Lines Of Code, dvs antal kodrader.\r\n# Åtta kodrader är lagom för detta problem.\r\n# Färre innebär sämre läsbarhet.\r\n# Har du fler bör du fundera på en kortare lösning.\r\n\r\nclass Kid\r\n\tconstructor : (name,age) ->\r\n\r\ngirls = [new Kid('Sabrina',12), new Kid('Helene',10), new Kid('Anna',11)]\r\nboys = [new Kid('David',10), new Kid('Henry',11), new Kid('Noel',14), new Kid('Numa',3)]\r\n\r\nnames = (kids) -> []\r\nages = (kids) -> []\r\nsum = (numbers) -> 0\r\nantal = (numbers) -> 0\r\naverage = (numbers) -> 0\r\n\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\n\r\nclass Kid\r\n\tconstructor : (@name,@age) ->\r\n\r\ngirls = [new Kid('Sabrina',12), new Kid('Helene',10), new Kid('Anna',11)]\r\nboys = [new Kid('David',10), new Kid('Henry',11), new Kid('Noel',14), new Kid('Numa',3)]\r\n\r\nnames = (kids) -> kid.name for kid in kids\r\n\r\nages = (kids) -> kid.age for kid in kids\r\n\r\nsum = (numbers) ->\r\n\tres = 0\r\n\tres += n for n in numbers\r\n\tres\r\n\r\nantal = (numbers) -> numbers.length\r\n\r\naverage = (numbers) -> sum(numbers) / antal(numbers)\r\n\"\"\"\r\n\r\n\t\t\tc:\r\n\t\t\t\t\"names girls\" : ['Sabrina', 'Helene', 'Anna']\r\n\t\t\t\t\"names boys\" : ['David', 'Henry', 'Noel','Numa']\r\n\t\t\t\t\"ages girls\" : [12,10,11]\r\n\t\t\t\t\"ages boys\" : [10,11,14,3]\r\n\t\t\t\t\"sum ages girls\" : 33\r\n\t\t\t\t\"sum ages boys\" : 38\r\n\t\t\t\t\"antal girls\" : 3\r\n\t\t\t\t\"antal boys\" : 4\r\n\t\t\t\t\"average ages girls\" : 11\r\n\t\t\t\t\"average ages boys\" : 9.5\r\n\t\t\te:\r\n\t\t\t\tclasses : \"http://blog.teamtreehouse.com/the-absolute-beginners-guide-to-coffeescript\"\r\n\r\n\r\n\t\tGeometri :\r\n\t\t\tb:\"\"\"\r\n# LOC:24 class constructor new @ Math.PI * + / - Math.sqrt Math.atan2\r\n\r\nclass Kvadrat\r\n\tconstructor : (@sida) ->\r\n\tarea : -> 0\r\n\tomkrets : -> 0\r\n\r\nclass Cirkel\r\n\tconstructor : (radie) ->\r\n\tarea : ->\r\n\tomkrets : ->\r\n\r\nclass Rektangel\r\n\tconstructor : () ->\r\n\tarea : ->\r\n\tomkrets : ->\r\n\r\nclass Triangel\r\n\tarea : ->\r\n\tomkrets : -> 0\r\n\r\nclass Kub\r\n\tarea : ->\r\n\tvolym : ->\r\n\r\nclass Linje\r\n\tdistans : ->\r\n\triktning : ->\r\n\r\n\t\t\t\"\"\"\r\n\t\t\ta:\"\"\"\r\nclass Kvadrat\r\n\tconstructor : (@sida) ->\r\n\tarea : -> @sida * @sida\r\n\tomkrets : -> 4 * @sida\r\n\r\nclass Cirkel\r\n\tconstructor : (@radie) ->\r\n\tarea : -> Math.PI * @radie * @radie\r\n\tomkrets : -> 2 * @radie * Math.PI\r\n\r\nclass Rektangel\r\n\tconstructor : (@a,@b) ->\r\n\tarea : -> @a * @b\r\n\tomkrets : -> 2 * (@a+@b)\r\n\r\nclass Triangel\r\n\tconstructor : (@a,@b) ->\r\n\tarea : -> @a * @b / 2\r\n\tomkrets : -> @a + @b + Math.sqrt @a*@a+@b*@b\r\n\r\nclass Kub\r\n\tconstructor : (@sida) ->\r\n\tarea : -> 6 * @sida * @sida\r\n\tvolym : -> @sida * @sida * @sida\r\n\r\nclass Linje\r\n\tconstructor : (@x1,@y1,@x2,@y2) -> [@dx, @dy] = [@x2-@x1, @y2-@y1]\r\n\tdistans : -> Math.sqrt @dx*@dx + @dy*@dy\r\n\triktning : -> 180 / Math.PI * Math.atan2 @dy,@dx\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"(new Kvadrat 5).area()\" : 25\r\n\t\t\t\t\"(new Kvadrat 6).omkrets()\" : 24\r\n\t\t\t\t\"(new Cirkel 3).area()\" : 3*3*Math.PI\r\n\t\t\t\t\"(new Cirkel 4).omkrets()\" : 2*4*Math.PI\r\n\t\t\t\t\"(new Rektangel 4,5).area()\" : 20\r\n\t\t\t\t\"(new Rektangel 4,5).omkrets()\" : 18\r\n\t\t\t\t\"(new Triangel 4,5).area()\" : 10\r\n\t\t\t\t\"(new Triangel 4,5).omkrets()\" : 4+5+Math.sqrt 4*4+5*5\r\n\t\t\t\t\"(new Kub 4).area()\" : 6 * 4 * 4\r\n\t\t\t\t\"(new Kub 4).volym()\" : 4 * 4 * 4\r\n\t\t\t\t\"(new Linje 0,0, 4,3).distans()\" : 5\r\n\t\t\t\t\"(new Linje 0,0, 4,3).riktning()\" : 36.86989764584402\r\n\r\n\r\n\r\n\r\n\r\n\t\tKalkylator :\r\n\t\t\tb: \"\"\"\r\n# LOC:11 class constructor new @ for in split == push pop if then else parseInt [] \"\"\r\n# Med Reverse Polish Notation behövs inga parenteser.\r\n# (2 + 3) * 4 utförs som 2 3 + 4 *\r\n\r\nclass RPN\r\n\tcalculate : (command) -> []\r\n\r\nrpn = new RPN\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\n\r\nclass RPN\r\n\tcalculate : (command) ->\r\n\t\t@stack = []\r\n\t\t@calc command\r\n\t\t@stack\r\n\r\n\tcalc : (command) ->\r\n\t\tfor cmd in command.split ' '\r\n\t\t\tif cmd == '+' then @stack.push @stack.pop() + @stack.pop()\r\n\t\t\telse if cmd == '*' then @stack.push @stack.pop() * @stack.pop()\r\n\t\t\telse if cmd == '/' then @stack.push 1 / @stack.pop() * @stack.pop()\r\n\t\t\telse @stack.push parseInt cmd\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"rpn.calculate '2'\" : [2]\r\n\t\t\t\t\"rpn.calculate '2 3'\" : [2,3]\r\n\t\t\t\t\"rpn.calculate '2 3 +'\" : [5]\r\n\t\t\t\t\"rpn.calculate '2 3 *'\" : [6]\r\n\t\t\t\t\"rpn.calculate '2 3 4 * +'\" : [14]\r\n\t\t\t\t\"rpn.calculate '3 4 /'\" : [0.75]\r\n\r\n\t\t\td:\r\n\t\t\t\t\"'a b c'.split ' '\" : ['a','b','c']\r\n\t\t\t\t'1 + 2' : 3\r\n\t\t\t\t\"'1' + '2'\" : '12'\r\n\t\t\t\t\"1 + '2'\" : '12'\r\n\t\t\t\t\"'1' + 2\" : '12'\r\n\t\t\t\t\"parseInt '3'\" : 3\r\n\t\t\t\t\"parseFloat '3.14'\" : 3.14\r\n\t\t\te:\r\n\t\t\t\tparseInt : \"https://www.w3schools.com/jsref/jsref_parseint.asp\"\r\n\t\t\t\tstack : \"https://sv.wikipedia.org/wiki/Stack_(datastruktur)\"\r\n\t\t\t\tsplit : \"https://coffeescript-cookbook.github.io/chapters/strings/splitting-a-string\"\r\n\t\t\t\t\"Omvänd Polsk Notation\" : \"https://sv.wikipedia.org/wiki/Omv%C3%A4nd_polsk_notation\"\r\n\r\n\t\tResistanskalkylator :\r\n\t\t\tb: \"\"\"\r\n# LOC:22 class constructor new @ for in split == push pop if then else parseInt [] \"\"\r\n# Exempel 1 kan lösas med: '2 2 s 4 p 10 s 4 8 s p 4 s'\r\n# Klarar du att lösa exempel 2?\r\n# OBS: Detta är fysik på gymnasienivå.\r\n\r\nserial = (a,b) -> 0\r\nparallel = (a,b) -> 0\r\n\r\nclass RPN\r\n\tconstructor : () ->\r\n\tcalculate : (command) -> []\r\n\r\nrpn = new RPN\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nserial = (a,b) -> a + b\r\nparallel = (a,b) -> 1/(1/a + 1/b)\r\n\r\nclass RPN\r\n\tconstructor : () ->\r\n\r\n\tcalculate : (command) ->\r\n\t\t@stack = []\r\n\t\t@calc command\r\n\t\t@stack\r\n\r\n\tcalc : (command) ->\r\n\t\tfor cmd in command.split ' '\r\n\t\t\tif cmd == '+' then @stack.push @stack.pop() + @stack.pop()\r\n\t\t\telse if cmd == '*' then @stack.push @stack.pop() * @stack.pop()\r\n\t\t\telse if cmd == '/' then @stack.push 1 / @stack.pop() * @stack.pop()\r\n\t\t\telse if cmd == 'inv' then @calc \"1 swap /\"\r\n\t\t\telse if cmd == 'swap'\r\n\t\t\t\ta = @stack.pop()\r\n\t\t\t\tb = @stack.pop()\r\n\t\t\t\t@stack.push a\r\n\t\t\t\t@stack.push b\r\n\t\t\telse if cmd == 's' then @calc '+'\r\n\t\t\telse if cmd == 'p' then @calc 'inv swap inv + inv'\r\n\t\t\telse @stack.push parseInt cmd\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"serial 100,150\" : 250\r\n\t\t\t\t\"parallel 100,150\" : 60\r\n\t\t\t\t\"parallel serial(100,150),100\" : 25000/350\r\n\t\t\t\t\"serial parallel(100,150),100\" : 160\r\n\t\t\t\t\"serial serial(100,150),200\" : 450\r\n\t\t\t\t\"parallel parallel(100,150),200\" : 100*150*200/(100*150 + 150*200 + 100*200)\r\n\t\t\t\t\"rpn.calculate '4 inv'\" : [0.25]\r\n\t\t\t\t\"rpn.calculate '3 4 swap'\" : [4,3]\r\n\t\t\t\t\"rpn.calculate '100 150 s'\" : [250]\r\n\t\t\t\t\"rpn.calculate '100 150 p'\" : [60]\r\n\t\t\t\t\"rpn.calculate '100 150 s 100 p'\" : [25000/350]\r\n\t\t\t\t\"rpn.calculate '100 150 p 100 s'\" : [160]\r\n\t\t\t\t\"rpn.calculate '100 150 s 200 s'\" : [100+150+200]\r\n\t\t\t\t\"rpn.calculate '100 150 p 200 p'\" : [100*150*200/(100*150 + 150*200 + 100*200)]\r\n\t\t\t\t\"rpn.calculate '2 2 s 4 p 10 s 4 8 s p 4 s'\" : [10]\r\n\t\t\t\t\"rpn.calculate '4 4 8 s 10 4 2 2 s p s p s'\" : [10]\r\n\r\n\t\t\td:\r\n\t\t\t\t\"100 + 150\" : 250\r\n\t\t\t\t\"100*150 / (100+150)\" : 60\r\n\t\t\t\t\"1 / (1/100 + 1/150)\" : 60\r\n\t\t\t\t\"100*150*200 / (100*150 + 100*200 + 150*200)\" : (100*150*200)/(100*150 + 150*200 + 100*200)\r\n\t\t\t\t\"1 / (1/100 + 1/150 + 1/200)\" : 100*150*200/(100*150 + 150*200 + 100*200)\r\n\t\t\te:\r\n\t\t\t\tResistans : \"http://montessorimuddle.org/wp-content/uploads/2012/01/circuits-resistance-current1.png\"\r\n\t\t\t\t\"Exempel 1\" : \"http://www.electronicshub.org/resistors-in-series-and-parallel-combinations#Resistors_in_series_and_parallel_Example\"\r\n\t\t\t\t\"Exempel 2\" : \"http://www.electronicshub.org/resistors-in-series-and-parallel-combinations#Resistor_Network\"\r\n\r\n\t\tBråktal :\r\n\t\t\tb:\"\"\"\r\n# LOC:8 class constructor new @ if then else * + - / % ==\r\n\r\ngcd = (a,b) -> 1\r\n\r\nclass Fraction\r\n\tconstructor : (a,b) ->\r\n\tto_s : -> \"1/1\"\r\n\tadd : (o) -> new Fraction 1,1\r\n\tsub : (o) -> new Fraction 1,1\r\n\tmul : (o) -> new Fraction 1,1\r\n\tdiv : (o) -> new Fraction 1,1\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\ngcd = (a,b) -> if b == 0 then a else gcd b, a % b\r\n\r\nclass Fraction\r\n\tconstructor : (@a,@b) -> [@a,@b] = [@a/gcd(@a,@b), @b/gcd(@a,@b)]\r\n\tto_s : -> @a + \"/\" + @b\r\n\tadd : (o) -> new Fraction @a*o.b+@b*o.a, @b*o.b\r\n\tsub : (o) -> new Fraction @a*o.b-@b*o.a, @b*o.b\r\n\tmul : (o) -> new Fraction @a*o.a, @b*o.b\r\n\tdiv : (o) -> new Fraction @a*o.b, @b*o.a\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"gcd 2,4\" : 2\r\n\t\t\t\t\"gcd 15,25\" : 5\r\n\t\t\t\t\"(new Fraction 2,4).to_s()\" : \"1/2\"\r\n\t\t\t\t\"(new Fraction 3,8).to_s()\" : \"3/8\"\r\n\t\t\t\t\"(new Fraction 1,2).add(new Fraction 1,3).to_s()\" : \"5/6\"\r\n\t\t\t\t\"(new Fraction 1,2).sub(new Fraction 1,3).to_s()\" : \"1/6\"\r\n\t\t\t\t\"(new Fraction 4,6).mul(new Fraction 1,3).to_s()\" : \"2/9\"\r\n\t\t\t\t\"(new Fraction 4,6).div(new Fraction 2,1).to_s()\" : \"1/3\"\r\n\t\t\te:\r\n\t\t\t\tBråktal : \"http://www.matteboken.se/lektioner/skolar-7/brak-och-procent/braktal\"\r\n\r\n\t\tSimplex :\r\n\t\t\tb:\"\"\"\r\n# LOC:14 class constructor new [] @\t+ - *\r\n# Tips: Spela p5Complex innan du påbörjar denna övning.\r\n\r\nclass Simplex\r\n\tconstructor : (x,y) ->\r\n\ttranslate : -> @\r\n\tscale : -> @\r\n\trotate : -> @\r\n\tmirror : -> @\r\n\r\na = new Simplex 1,3\r\nb = new Simplex -2,4\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nclass Simplex\r\n\tconstructor : (@x,@y) ->\r\n\ttranslate : ->\r\n\t\t@x += 1\r\n\t\t@\r\n\tscale : ->\r\n\t\t[@x,@y] = [2*@x,2*@y]\r\n\t\t@\r\n\trotate : ->\r\n\t\t[@x,@y] = [-@y,@x]\r\n\t\t@\r\n\tmirror : ->\r\n\t\t[@x,@y] = [@y,@x]\r\n\t\t@\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"pp a\" : \"{x:1,y:3}\"\r\n\t\t\t\t\"pp a.translate()\" : \"{x:2,y:3}\"\r\n\t\t\t\t\"pp a.scale()\" : \"{x:2,y:6}\"\r\n\t\t\t\t\"pp a.rotate()\" : \"{x:-3,y:1}\"\r\n\t\t\t\t\"pp a.mirror()\" : \"{x:3,y:1}\"\r\n\t\t\t\t\"pp a.translate().scale()\" : \"{x:4,y:6}\"\r\n\t\t\t\t\"pp a.scale().translate()\" : \"{x:3,y:6}\"\r\n\t\t\t\t\"pp b\" : \"{x:-2,y:4}\"\r\n\t\t\t\t\"pp b.translate()\" : \"{x:-1,y:4}\"\r\n\t\t\t\t\"pp b.scale()\" : \"{x:-4,y:8}\"\r\n\t\t\t\t\"pp b.rotate()\" : \"{x:-4,y:-2}\"\r\n\t\t\t\t\"pp b.mirror()\" : \"{x:4,y:-2}\"\r\n\t\t\t\t\"pp b.translate().scale()\" : \"{x:-2,y:8}\"\r\n\t\t\t\t\"pp b.scale().translate()\" : \"{x:-3,y:8}\"\r\n\t\t\t\t\"pp b.mirror().mirror()\" : \"{x:-2,y:4}\"\r\n\t\t\t\t\"pp b.rotate().rotate().rotate().rotate()\" : \"{x:-2,y:4}\"\r\n\t\t\te:\r\n\t\t\t\tp5Complex : \"https://christernilsson.github.io/p5Complex/www\"\r\n\r\n\t\tBignum :\r\n\t\t\tb:\"\"\"\r\n# LOC:22 class constructor new @ parseInt reverse length push floor slice unshift join for if\r\n# Med Bignum kan man räkna exakt med tal med tusentals siffor.\r\n# Du programmerar på samma sätt som om du räknar med papper och penna.\r\n# Multiplikationen använder sig av additionen samt inskiftande av noll för varje siffra.\r\n\r\nclass Bignum\r\n\tconstructor : (s) -> @list=[]\r\n\tto_s : () -> \"\"\r\n\tadd : (other) -> @\r\n\tmul : (other) -> @\r\n\r\na = new Bignum \"123\"\r\nb = new Bignum \"8\"\r\nc = new Bignum \"999\"\r\nd = new Bignum \"456\"\r\ne = new Bignum \"12345678901234567890\"\r\nf = new Bignum \"1\"\r\ng = new Bignum \"1\"\r\nh = new Bignum \"2\"\r\n\r\ng = g.add g for i in range 100\r\nh = h.mul h for i in range 7\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\n\r\n# observera att reverse() vänder PÅ plats.\r\n# clona därför med slice() i t ex to_s\r\n#reversera = (arr) -> arr.slice().reverse()\r\n\r\nclass Bignum\r\n\tconstructor : (s) ->\r\n\t\t@list = (parseInt(ch) for ch in s)\r\n\t\t@list.reverse()\r\n\r\n\tto_s : () -> @list.slice().reverse().join(\"\")\r\n\r\n\tadd : (other) ->\r\n\t\tif @list.length < other.list.length then return other.add @\r\n\t\tcarry = 0\r\n\t\tres = new Bignum \"\"\r\n\t\tfor d1, pos in @list\r\n\t\t\td = d1 + (other.list[pos] || 0) + carry\r\n\t\t\tres.list.push d % 10\r\n\t\t\tcarry = Math.floor d / 10\r\n\t\tif carry then res.list.push 1\r\n\t\tres\r\n\r\n\tmul : (other) ->\r\n\t\tres = new Bignum \"\"\r\n\t\tfor digit,d in other.list.slice().reverse()\r\n\t\t\tfor i in range digit\r\n\t\t\t\tres = res.add @\r\n\t\t\tif d < other.list.length-1 then res.list.unshift 0\r\n\t\tres\r\n\r\na = new Bignum \"123\"\r\nb = new Bignum \"8\"\r\nc = new Bignum \"999\"\r\nd = new Bignum \"456\"\r\ne = new Bignum \"12345678901234567890\"\r\nf = new Bignum \"1\"\r\ng = new Bignum \"1\"\r\nh = new Bignum \"2\"\r\n\r\ng = g.add g for i in range 100\r\nh = h.mul h for i in range 7\r\n\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"a.list\" : [3,2,1]\r\n\t\t\t\t\"a.to_s()\" : \"123\"\r\n\t\t\t\t\"a.add(b).to_s()\" : \"131\"\r\n\t\t\t\t\"b.add(a).to_s()\" : \"131\"\r\n\t\t\t\t\"a.add(c).to_s()\" : \"1122\"\r\n\t\t\t\t\"a.add(b).add(c).to_s()\" : \"1130\"\r\n\t\t\t\t\"e.add(f).to_s()\" : \"12345678901234567891\"\r\n\t\t\t\t\"g.to_s()\" : \"1267650600228229401496703205376\"\r\n\t\t\t\t\"a.mul(b).to_s()\" :\"984\"\r\n\t\t\t\t\"a.mul(c).to_s()\" : \"122877\"\r\n\t\t\t\t\"a.mul(d).to_s()\" : \"56088\"\r\n\t\t\t\t\"h.to_s()\" :\"340282366920938463463374607431768211456\"\r\n\t\t\td:\r\n\t\t\t\t\"parseInt '1'\" : 1\r\n\t\t\t\t\"[1,2,3].reverse()\" : [3,2,1]\r\n\t\t\t\t\"[1,2,3].length\" : 3\r\n\t\t\t\t\"Math.floor 3.14\" : 3\r\n\t\t\t\t\"[11,22,33].slice 1\" : [22,33]\r\n\t\t\t\t\"[11,22,33].slice 1,2\" : [22]\r\n\t\t\t\t\"[11,22,33].slice()\" : [11,22,33]\r\n\t\t\t\t\"12345678901234567890 + 1\" : 12345678901234567000\r\n\t\t\te:\r\n\t\t\t\tBignum : \"https://sv.wikipedia.org/wiki/Bignum-aritmetik\"\r\n\t\t\t\tunshift : \"https://www.w3schools.com/jsref/jsref_unshift.asp\"\r\n\t\t\t\tshift : \"https://www.w3schools.com/jsref/jsref_shift.asp\"\r\n\t\t\t\tpush : \"https://www.w3schools.com/jsref/jsref_push.asp\"\r\n\t\t\t\tpop : \"https://www.w3schools.com/jsref/jsref_pop.asp\"\r\n\r\n\r\n\t\tComplex:\r\n\t\t\tb: \"\"\"\r\n# LOC:31 class constructor new @ -> if + * == > <\r\n# Börja med att få bort onödiga nollor och ettor i to_s!\r\n\r\nclass Complex\r\n\tconstructor : (@x,@y) ->\r\n\tto_s : -> @x + \" \" + @y + \"i\"\r\n\tadd : (other) -> @\r\n\tmul : (other) -> @\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nclass Complex\r\n\tconstructor : (@x,@y) ->\r\n\tadd : (other) ->\r\n\t\tnew Complex @x+other.x, @y+other.y\r\n\tmul : (other) ->\r\n\t\ta = @x\r\n\t\tb = @y\r\n\t\tc = other.x\r\n\t\td = other.y\r\n\t\tnew Complex a*c-b*d, b*c+a*d\r\n\tto_s : ->\r\n\t\tsx = \"\" if @x == 0\r\n\t\tsx = @x if @x > 0\r\n\t\tsx = @x if @x < 0\r\n\r\n\t\tsy = \"\" if @y == 0\r\n\t\tsy = \"-i\" if @y == -1\r\n\t\tsy = \"i\" if @y == 1\r\n\t\tsy = @y+\"i\" if @y > 1\r\n\t\tsy = @y+\"i\" if @y < -1\r\n\r\n\t\tif sx!=\"\" and sy!=\"\"\r\n\t\t\tif @y < 0\r\n\t\t\t\ts = sx+sy\r\n\t\t\telse if @y==0\r\n\t\t\t\ts = sx\r\n\t\t\telse\r\n\t\t\t\ts = sx + \"+\" + sy\r\n\t\telse if @x==0 and @y==0\r\n\t\t\ts = \"0\"\r\n\t\telse\r\n\t\t\ts = sx + sy\r\n\t\ts\r\n\t\t\t\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"new Complex(-1,0).to_s()\" :\"-1\"\r\n\t\t\t\t\"new Complex(-1,-1).to_s()\" : \"-1-i\"\r\n\t\t\t\t\"new Complex(0,-1).to_s()\" : \"-i\"\r\n\t\t\t\t\"new Complex(0,0).to_s()\" : \"0\"\r\n\t\t\t\t\"new Complex(0,1).to_s()\" : \"i\"\r\n\t\t\t\t\"new Complex(1,-2).to_s()\" : \"1-2i\"\r\n\t\t\t\t\"new Complex(1,-1).to_s()\" : \"1-i\"\r\n\t\t\t\t\"new Complex(1,0).to_s()\" : \"1\"\r\n\t\t\t\t\"new Complex(1,1).to_s()\" : \"1+i\"\r\n\t\t\t\t\"new Complex(1,2).to_s()\" : \"1+2i\"\r\n\t\t\t\t\"new Complex(1,2).add(new Complex(1,-1)).to_s()\" : \"2+i\"\r\n\t\t\t\t\"new Complex(1,2).mul(new Complex(1,-1)).to_s()\" : \"3+i\"\r\n\t\t\te:\r\n\t\t\t\t\"Komplexa tal\" : \"https://sv.wikipedia.org/wiki/Komplexa_tal\"\r\n\r\n\t\tPolynom :\r\n\t\t\tb: \"\"\"\r\n# LOC:52 class constructor new [] @ or for in range length ** push reverse join #{}\r\n# Uppgiften innehåller matematik på gymnasienivå.\r\n\r\nclass Polynom\r\n\tconstructor : (lst) -> @lst=[]\r\n\tto_s : -> \"\"\r\n\tadd : (other) -> @\r\n\tmul : (other) -> @\r\n\tpower : (n) -> @\r\n\tvalue : (x) -> 0\r\n\tdiff : -> @\r\n\tinteg : -> @\r\n\tcompose : (other)\t-> @\r\n\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nclass Polynom\r\n\tconstructor : (@lst) ->\r\n\r\n\tadd : (other) ->\r\n\t\th = []\r\n\t\th[i] = (h[i] or 0) + value for value,i in @lst\r\n\t\th[i] = (h[i] or 0) + value for value,i in other.lst\r\n\t\tnew Polynom h\r\n\r\n\tmul : (other) ->\r\n\t\th = (0 for i in range @lst.length + other.lst.length - 1)\r\n\t\tfor value1,i1 in @lst\r\n\t\t\tfor value2,i2 in other.lst\r\n\t\t\t\ti = i1+i2\r\n\t\t\t\th[i] = (h[i] or 0) + value1 * value2\r\n\t\tnew Polynom h\r\n\r\n\tpower : (n) ->\r\n\t\tres = new Polynom [1]\r\n\t\tres = res.mul @ for i in range n\r\n\t\tres\r\n\r\n\tcompose : (other)\t->\r\n\t\tres = new Polynom []\r\n\t\tfor value,i in @lst\r\n\t\t\tres = res.add (new Polynom [value]).mul other.power i\r\n\t\tres\r\n\r\n\tvalue : (x) ->\r\n\t\tres = 0\r\n\t\tres += value * x ** i for value,i in @lst\r\n\t\tres\r\n\r\n\tdiff : ->\r\n\t\tlst = []\r\n\t\tfor value,i in @lst\r\n\t\t\tif i != 0 then lst[i-1] = i*value\r\n\t\tnew Polynom lst\r\n\r\n\tinteg : ->\r\n\t\tlst = [0]\r\n\t\tfor value,i in @lst\r\n\t\t\ti += 1\r\n\t\t\tlst[i] = value/i\r\n\t\tnew Polynom lst\r\n\r\n\tto_s : ->\r\n\t\tarr = []\r\n\t\tfor item,i in @lst\r\n\t\t\tif item == 0 then continue\r\n\t\t\tif item == 1\r\n\t\t\t\tif i==0 then arr.push \"1\"\r\n\t\t\t\telse if i==1 then arr.push \"x\"\r\n\t\t\t\telse arr.push \"x^\" + i\r\n\t\t\telse\r\n\t\t\t\tif i==0 then arr.push item\r\n\t\t\t\telse if i==1 then arr.push item + \"*x\"\r\n\t\t\t\telse arr.push item + \"*x^\" + i\r\n\t\tarr.reverse()\r\n\t\tarr.join \"+\"\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"(new Polynom [5,4,3]).lst\" : [5,4,3]\r\n\t\t\t\t\"(new Polynom [4,3]).lst\" : [4,3]\r\n\t\t\t\t\"(new Polynom [5,4,3]).to_s()\" : \"3*x^2+4*x+5\"\r\n\t\t\t\t\"(new Polynom [0,0,1]).to_s()\" : \"x^2\"\r\n\t\t\t\t\"(new Polynom [5,4,3]).add(new Polynom [4,3]).to_s()\" : \"3*x^2+7*x+9\"\r\n\t\t\t\t\"(new Polynom [5,4,3]).mul(new Polynom [4,3]).to_s()\" : \"9*x^3+24*x^2+31*x+20\"\r\n\t\t\t\t\"(new Polynom [5,4,3]).value(2)\" : 25\r\n\t\t\t\t\"(new Polynom [5,4,3]).power(2).lst\" : [25,40,46,24,9]\r\n\t\t\t\t\"(new Polynom [4,3]).power(3).lst\" : [64,144,108,27]\r\n\t\t\t\t\"(new Polynom [5,4,3]).diff().lst\" : [4,6]\r\n\t\t\t\t\"(new Polynom [5,4,3]).integ().lst\" : [0,5,2,1]\r\n\t\t\t\t\"(new Polynom [0,0,1]).integ().to_s()\" : \"0.3333333333333333*x^3\"\r\n\t\t\t\t\"(new Polynom [0,0,1]).integ().value(3)\" : 9\r\n\t\t\t\t\"(new Polynom [3,2]).compose(new Polynom [3,2]).lst\" : [9,4]\r\n\t\t\t\t\"(new Polynom [3,2]).compose(new Polynom [5,0,-1]).lst\" : [13,0,-2]\r\n\t\t\t\t\"(new Polynom [5,0,-1]).compose(new Polynom [3,2]).lst\" : [-4,-12,-4]\r\n\t\t\t\t\"(new Polynom [5,0,-1]).compose(new Polynom [5,0,-1]).lst\" : [-20,0,10,0,-1]\r\n\t\t\te:\r\n\t\t\t\tPolynom : \"http://www.matteboken.se/lektioner/matte-2/algebra/polynom\"\r\n\t\t\t\tPolynomfunktioner : \"http://www.matteboken.se/lektioner/matte-3/polynom-och-ekvationer/polynomfunktioner\"\r\n\t\t\t\t\"Multiplikation\" : \"http://www.matteboken.se/lektioner/matte-3/polynom-och-ekvationer/multiplikation-av-polynom\"\r\n\t\t\t\t\"Polynom, wikipedia\" : \"https://sv.wikipedia.org/wiki/Polynom\"\r\n\r\n\t\tCompressor :\r\n\t\t\tb:\"\"\"\r\n# LOC:9 class constructor new @ for in if then else != break push split join \"\" []\r\n\r\nclass Compressor\r\n\tconstructor : (ordlista) ->\r\n\tto_s : -> \"\"\r\n\r\nc5 = new Compressor \"abakus abandon abbedissa abborre abbot babbel\"\r\ncompressor = new Compressor ordlista\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nclass Compressor\r\n\tconstructor : (ordlista, @last=\"\", @compressed=[]) ->\r\n\t\twords = ordlista.split \" \"\r\n\t\tfor word in words\r\n\t\t\tfor ch,i in word\r\n\t\t\t\tif ch != @last[i] then break\r\n\t\t\t@last = word\r\n\t\t\t@compressed.push i + word[i..]\r\n\tto_s : -> @compressed.join \"\"\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"c5.to_s()\" : \"0abakus3ndon2bedissa3orre4t0babbel\"\r\n\t\t\t\t\"ordlista.length\" : 437305\r\n\t\t\t\t\"compressor.to_s().length\" : 212097\r\n\r\n\t\tNian :\r\n\t\t\tb:\"\"\"\r\n# LOC:20 class constructor new @ split for in of reduce ** & and push \"\" indexOf > if then _.countBy\r\n# Bilda ord med fyra till nio bokstäver. Den mittersta bokstaven måste ingå.\r\n\r\nclass Nian\r\n\tconstructor : (lista=words) ->\r\n\tbits : (word) -> 0\r\n\tsolve : (letters) -> []\r\n\r\nwords = ordlista.split \" \"\r\nnian = new Nian\r\n\t\t\t\"\"\"\r\n\t\t\ta:\"\"\"\r\n\r\nclass Nian\r\n\tconstructor : (@words=words) ->\r\n\t\t@patterns = (@bits word for word in @words)\r\n\r\n\tbits : (word) -> word.split(\"\").reduce ((acc,ch) -> acc|(2 ** \"abcdefghijklmnopqrstuvwxyzåäö\".indexOf ch)), 0\r\n\tok : (f1,f2) ->\r\n\t\tfor ch, f of f2\r\n\t\t\tif f > f1[ch] then return false\r\n\t\ttrue\r\n\r\n\tsolve : (letters) ->\r\n\t\tmandatory = letters[4]\r\n\t\tres = []\r\n\t\tp = @bits letters\r\n\t\tletters1 = letters.split \"\"\r\n\t\tfreq1 = _.countBy letters1\r\n\t\tfor pattern,i in @patterns\r\n\t\t\tif (p & pattern) == pattern\r\n\t\t\t\tletters2 = @words[i].split \"\"\r\n\t\t\t\tfreq2 = _.countBy letters2\r\n\t\t\t\tif @ok(freq1,freq2) and mandatory in letters2 then res.push @words[i]\r\n\t\tres\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"nian.bits 'a'\" : 1\r\n\t\t\t\t\"nian.bits 'b'\" : 2\r\n\t\t\t\t\"nian.bits 'c'\" : 4\r\n\t\t\t\t\"nian.bits 'abba'\" : 3\r\n\t\t\t\t\"nian.bits 'aaaacklmn'\" : 15365\r\n\t\t\t\t\"nian.bits 'mack'\" : 5125\r\n\t\t\t\t\"nian.solve 'aaaacklmn'\" : [\"almanacka\", \"anacka\", \"lack\", \"lacka\", \"mack\", \"macka\", \"mackla\", \"nacka\"]\r\n\t\t\t\t\"nian.solve 'eemncrrtö'\" : [\"cement\", \"cementrör\", \"cent\", \"center\", \"cert\", \"crème\", \"recent\"]\r\n\t\t\t\t\"nian.solve('rakeutraf').length\" : 34\r\n\t\t\td:\r\n\t\t\t\t\"words.length\" : 52269\r\n\t\t\t\t\"_.first words\" : \"abakus\"\r\n\t\t\t\t\"_.last words\" : \"övärld\"\r\n\r\n\t\t\te:\r\n\t\t\t\tNian : \"http://svenska-apps.se/iphone-ipad/underhallning/svd-nian-babqpg.html\"\r\n\t\t\t\t'_.countBy' : \"http://underscorejs.org/#countBy\"\r\n\t\t\t\treduce : \"https://coffeescript-cookbook.github.io/chapters/arrays/reducing-arrays\"\r\n\r\n\t\tMorse :\r\n\t\t\tb:\"\"\"\r\n# LOC:7 class constructor new @ indexOf * / + % == Math.floor for in \"\" if then else split join\r\n\r\nclass Morse\r\n\tconstructor : (ab, alfabet) ->\r\n\tindexes : (i) -> []\r\n\tencode : (c) -> \"\"\r\n\tc2m : (word) -> \"\"\r\n\tdecode : (code,i=0) -> \"\"\r\n\tm2c : (word) -> \"\"\r\n\r\n#                          012345678901234567890123456789\r\nmorse  = new Morse '.-',  ' etianmsurwdkgohvf l pjbxcyzq'\r\nmorse1 = new Morse '*',   ' abcdefghijklmnopqrstuvwxyzåäö'\r\nmorse2 = new Morse '01',  ' abcdefghijklmnopqrstuvwxyzåäö'\r\nmorse3 = new Morse 'XYZ', ' abcdefghijklmnopqrstuvwxyzåäö'\r\nmorse4 = new Morse 'ABCD',' abcdefghijklmnopqrstuvwxyzåäö'\r\nmorse5 = new Morse 'BCDEFGHIJKLMNOPQRSTUVWXYZÅÄÖA',' abcdefghijklmnopqrstuvwxyzåäö'\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\nclass Morse\r\n\tconstructor : (@ab, @alfabet) -> @n = @ab.length\r\n\tindexes : (i) -> if i==0 then [] else (@indexes (Math.floor (i-1) / @n)).concat [(i-1) % @n]\r\n\tencode : (c) -> (@ab[item] for item in @indexes @alfabet.indexOf c).join \"\"\r\n\tc2m : (word) -> (@encode c for c in word).join \" \"\r\n\tdecode : (code,i=0) -> if code==\"\" then @alfabet[i] else @decode code[1..], @n*i+1+@ab.indexOf code[0]\r\n\tm2c : (word) -> (@decode(code) for code in word.split ' ').join \"\"\r\n\"\"\"\r\n\t\t\tc:\r\n\r\n\t\t\t\t\"morse.indexes 9\" : [0,1,0]\r\n\t\t\t\t\"morse.encode 'r'\" : \".-.\"\r\n\t\t\t\t\"morse.c2m 'morse'\" : '-- --- .-. ... .'\r\n\t\t\t\t\"morse.decode '.-.'\" : 'r'\r\n\t\t\t\t\"morse.m2c '-- --- .-. ... .'\" : 'morse'\r\n\r\n\t\t\t\t\"morse1.c2m 'alfa'\" : '* ************ ****** *'\r\n\t\t\t\t\"morse1.m2c '* ************ ****** *'\" : 'alfa'\r\n\r\n\t\t\t\t\"morse2.c2m 'alfabet'\" : '0 101 11 0 1 10 0101'\r\n\t\t\t\t\"morse2.m2c '0 101 11 0 1 10 0101'\" : 'alfabet'\r\n\r\n\t\t\t\t\"morse3.c2m 'tre'\" : 'XZY XYZ XY'\r\n\t\t\t\t\"morse3.m2c 'XZY XYZ XY'\" : 'tre'\r\n\r\n\t\t\t\t\"morse4.c2m 'fjorton'\" : 'AB BB CC DB DD CC CB'\r\n\t\t\t\t\"morse4.m2c 'AB BB CC DB DD CC CB'\" : 'fjorton'\r\n\r\n\t\t\t\t\"morse5.c2m 'tjugonio'\" : 'U K V H P O J P'\r\n\t\t\t\t\"morse5.m2c 'U K V H P O J P'\" : 'tjugonio'\r\n\r\n\t\t\td:\r\n\t\t\t\t\"' abcd'.indexOf 'b'\" : 2\r\n\t\t\te:\r\n\t\t\t\tMorse : \"https://sv.wikipedia.org/wiki/Morsealfabetet\"\r\n\t\t\t\tindexOf : \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"\r\n\r\n#########################\r\n\t\"A8: Advanced\" :\r\n#########################\r\n\r\n\t\tpath:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 concat if then else\r\n\r\ntree = {3:0, 4:8, 5:3, 6:3, 10:5, 7:5, 12:6, 8:6, 20:10, 9:7, 24:12, 14:12}\r\n\r\npath = (tree,x) -> []\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\npath = (tree,x) -> if x==0 then return [] else [x].concat path tree,tree[x]\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"path tree, 4\" : [4,8,6,3]\r\n\t\t\t\t\"path tree, 20\" : [20,10,5,3]\r\n\t\t\t\t\"path tree, 9\" : [9,7,5,3]\r\n\r\n\t\tsumma:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 _.isEqual _.isNumber _.head _.tail\r\n\r\nsumma = (tree) -> 0\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nsumma = (tree) -> return if _.isEqual tree,[] then 0 else if _.isNumber tree then tree else\tsumma(_.head tree) + summa _.tail tree\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"summa [1,2,3,4]\" : 10\r\n\t\t\t\t\"summa [3, [5,6], [7,8,10,12], [4,9,14,[20,24]], [[12,13],14]]\" : 161\r\n\t\t\td:\r\n\t\t\t\t\"_.isNumber '12'\" : false\r\n\t\t\t\t\"_.isNumber 12\" : true\r\n\t\t\t\t\"_.isNumber [12]\" : false\r\n\t\t\t\t\"_.head [11,22,33]\" : 11\r\n\t\t\t\t\"_.tail [11,22,33]\" : [22,33]\r\n\t\t\te:\r\n\t\t\t\t\"_.isEqual\" : \"http://underscorejs.org/#isEqual\"\r\n\t\t\t\t\"_.isNumber\" : \"http://underscorejs.org/#isNumber\"\r\n\t\t\t\t\"_.head\" : \"http://underscorejs.org/#head\"\r\n\t\t\t\t\"_.tail\" : \"http://underscorejs.org/#tail\"\r\n\r\n\r\n\t\t\"list recursion\" :\r\n\t\t\tb:\"\"\"\r\n# LOC:7 typeof if then else for in range min length\r\n# Lägg märke till javascripts felaktiga hantering av tal vid jämförelse av listor.\r\n\r\ncompare = (a,b) -> -2\r\n\r\n\t\t\t\"\"\"\r\n\t\t\ta:\"\"\"\r\ncompare = (a,b) ->\r\n\tif typeof a != \"object\"\r\n\t\tif a > b then return -1 else if a < b then return 1 else return 0\r\n\tfor i in range min a.length,b.length\r\n\t\tc = compare a[i],b[i]\r\n\t\tif c != 0 then return c\r\n\t0\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"compare 11, 2\" : -1\r\n\t\t\t\t\"compare [11], [2]\" : -1\r\n\t\t\t\t\"compare [11], [10]\" : -1\r\n\t\t\t\t\"compare [11], [11]\" : 0\r\n\t\t\t\t\"compare [2], [11]\" : 1\r\n\t\t\t\t\"compare [1,[2,3]], [1,[2,3]]\" : 0\r\n\t\t\t\t\"compare [10,[2,3]], [1,[2,3]]\" : -1\r\n\t\t\t\t\"compare [1,[20,3]], [1,[2,3]]\" : -1\r\n\t\t\t\t\"compare [1,[2,30]], [1,[2,3]]\" : -1\r\n\t\t\t\t\"compare [3, [5,6], [7,8,10,12], [4,9,14,[20,24]], [[12,13],14]], [3, [5,6], [7,8,10,12], [4,9,14,[20,23]], [[12,13],14]]\" : -1\r\n\t\t\t\t\"compare [3, [5,6], [7,8,10,12], [4,9,14,[20,24]], [[12,13],14]], [3, [5,6], [7,8,10,12], [4,9,14,[20,24]], [[12,13],14]]\" : 0\r\n\t\t\t\t\"compare [3, [5,6], [7,8,10,12], [4,9,14,[20,24]], [[12,13],14]], [3, [5,6], [7,8,10,12], [4,9,14,[20,25]], [[12,13],14]]\" : 1\r\n\t\t\td:\r\n\t\t\t\t\"typeof 1\" : \"number\"\r\n\t\t\t\t\"typeof 3.14\" : \"number\"\r\n\t\t\t\t'typeof \"\"' : \"string\"\r\n\t\t\t\t\"typeof []\" : \"object\"\r\n\t\t\t\t\"typeof {}\" : \"object\"\r\n\t\t\t\t\"min 1,2\" : 1\r\n\t\t\t\t\"min 2,1\" : 1\r\n\t\t\t\t\"11 > 2\" : true\r\n\t\t\t\t\"[11] > [2]\" : false\r\n\t\t\t\t\"[11] > [10]\" : true\r\n\t\t\t\t\"11 == 11\" : true\r\n\t\t\t\t'\"11\" == \"11\"' : true\r\n\t\t\t\t\"[11] == [11]\" : false\r\n\r\n\t\tfilter:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 filter\r\n\r\ndjur = [\r\n\t{namn:'Fluffy',art:'kanin'}\r\n\t{namn:'Karo',art:'hund'}\r\n\t{namn:'Rocky',art:'hund'}\r\n\t{namn:'Albert',art:'fisk'}\r\n\t{namn:'Trixie',art:'katt'}\r\n\t{namn:'Herbert',art:'fisk'}\r\n]\r\n\r\ng = (djur, art) -> []\r\n\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\ng = (djur, art) -> djur.filter (d) -> d.art == art\r\n\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"g djur,'hund'\" : [{namn:'Karo',art:'hund'},{namn:'Rocky',art:'hund'}]\r\n\t\t\t\t\"g djur,'fisk'\" : [{namn:'Albert',art:'fisk'},{namn:'Herbert',art:'fisk'}]\r\n\t\t\t\t\"g djur,'kanin'\" : [{namn:'Fluffy',art:'kanin'}]\r\n\t\t\t\t\"g djur,'katt'\" : [{namn:'Trixie',art:'katt'}]\r\n\t\t\t\t\"g djur,'papegoja'\" : []\r\n\t\t\td:\r\n\t\t\t\t\"[1, -2, 0, 3, -4].filter (x) -> x > 0\" : [1,3]\r\n\t\t\te:\r\n\t\t\t\tfilter : \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\r\n\r\n\t\tcomprehension:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 for\r\n\r\ndjur = [\r\n\t{namn:'Fluffy',art:'kanin'}\r\n\t{namn:'Karo',art:'hund'}\r\n\t{namn:'Rocky',art:'hund'}\r\n\t{namn:'Albert',art:'fisk'}\r\n\t{namn:'Trixie',art:'katt'}\r\n\t{namn:'Herbert',art:'fisk'}\r\n]\r\n\r\nnamn = (djur) -> []\r\n\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nnamn = (djur) -> (d.namn for d in djur)\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"namn djur\" : ['Fluffy','Karo','Rocky','Albert','Trixie','Herbert']\r\n\t\t\td:\r\n\t\t\t\t\"(2**i for i in range 5)\" : [1,2,4,8,16]\r\n\t\t\te:\r\n\t\t\t\tcomprehension : \"https://coffeescript-cookbook.github.io/chapters/arrays/list-comprehensions\"\r\n\r\n\t\treduce:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 reduce\r\n\r\nica = [\r\n\t{pris: 123, antal:1}\r\n\t{pris: 34, antal:2}\r\n\t{pris: 78, antal:4}\r\n\t{pris: 96, antal:5}\r\n]\r\nkonsum = [\r\n\t{pris: 100, antal:1}\r\n\t{pris: 30, antal:1}\r\n\t{pris: 70, antal:1}\r\n\t{pris: 90, antal:1}\r\n]\r\n\r\nsumma = (varor) -> 0\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nsumma = (varor) -> varor.reduce ((sum, vara) -> sum + vara.pris * vara.antal), 0\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"summa ica\" : 983\r\n\t\t\t\t\"summa konsum\" : 290\r\n\t\t\td:\r\n\t\t\t\t\"ica.reduce ((sum, vara) -> sum + vara.antal), 0\" : 12\r\n\t\t\t\t\"konsum.reduce ((sum, vara) -> sum + vara.pris), 0\" : 290\r\n\t\t\te:\r\n\t\t\t\treduce : \"https://coffeescript-cookbook.github.io/chapters/arrays/reducing-arrays\"\r\n\r\n\t\tsortBy:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 _.sortBy\r\n\r\ndjur = ['Fluffy','Karo','Rocky','Albert','Trixie','Herbert']\r\n\r\nsortera = (djur,f) -> []\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nsortera = (djur,f) -> _.sortBy djur, f\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"sortera djur, (d) -> d.length\" : [\"Karo\",\"Rocky\",\"Fluffy\",\"Albert\",\"Trixie\",\"Herbert\"]\r\n\t\t\t\t\"sortera djur\" : [\"Albert\",\"Fluffy\",\"Herbert\",\"Karo\",\"Rocky\",\"Trixie\"]\r\n\t\t\td:\r\n\t\t\t\t\"_.sortBy ['one', 'two', 'three', 'four'], 'length'\" : [\"one\", \"two\",\"four\",\"three\"]\r\n\t\t\te:\r\n\t\t\t\t\"_.sortBy\" : \"http://underscorejs.org/#sortBy\"\r\n\r\n\t\tgroupBy:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 _.groupBy\r\n\r\ndjur = ['Fluffy','Karo','Rocky','Albert','Trixie','Herbert']\r\n\r\ngruppera = (djur,f) -> {}\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\ngruppera = (djur,f) -> _.groupBy djur, f\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"gruppera djur, (d) -> d.length\" : {\"4\":[\"Karo\"],\"5\":[\"Rocky\"],\"6\":[\"Fluffy\",\"Albert\",\"Trixie\"],\"7\":[\"Herbert\"]}\r\n\t\t\t\t\"gruppera djur, (d) -> _.last(d)\" : {\"y\":[\"Fluffy\",\"Rocky\"],\"o\":[\"Karo\"],\"t\":[\"Albert\",\"Herbert\"],\"e\":[\"Trixie\"]}\r\n\t\t\td:\r\n\t\t\t\t\"_.groupBy ['one', 'two', 'three'], 'length'\" : {3: [\"one\", \"two\"], 5: [\"three\"]}\r\n\t\t\te:\r\n\t\t\t\t\"_.groupBy\" : \"http://underscorejs.org/#groupBy\"\r\n\r\n\t\tsplit:\r\n\t\t\tb: \"\"\"\r\n# LOC:1 split for in _.object\r\n\r\nparametrar = (url) -> {}\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nparametrar = (url) -> _.object(f.split '=' for f in url.split('?')[1].split('&'))\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"parametrar 'dn.se?x=0&y=1'\" : {x:'0', y:'1'}\r\n\t\t\t\t\"parametrar 'svd.se?page=7'\" : {page : '7'}\r\n\t\t\t\t\"parametrar 'aftonbladet.se?article=123456&date=2016-12-01'\" : {article:'123456', date:'2016-12-01'}\r\n\t\t\t\t\"parametrar 'expressen.se?city=Stockholm'\" : {city : 'Stockholm'}\r\n\t\t\t\t\"parametrar 'http://stackoverflow.com/search?q=coffeescript'\" : {q : 'coffeescript'}\r\n\t\t\td:\r\n\t\t\t\t\"'1,2,3'.split ','\" : [\"1\",\"2\",\"3\"]\r\n\t\t\t\t\"_.object ['moe', 'larry', 'curly'], [30, 40, 50]\" : {moe: 30, larry: 40, curly: 50}\r\n\t\t\t\t\"_.object [['moe', 30], ['larry', 40], ['curly', 50]]\" : {moe: 30, larry: 40, curly: 50}\r\n\t\t\te:\r\n\t\t\t\t\"_.object\" : \"http://underscorejs.org/#object\"\r\n\t\t\t\tsplit : \"https://coffeescript-cookbook.github.io/chapters/strings/splitting-a-string\"\r\n\r\n\r\n\t\tPokerHand :\r\n\t\t\tb: \"\"\"\r\n# LOC:10 nilsson: compare bsort underscore: _.size _.groupBy _.unzip _.uniq \"\" [] {}\r\n# javascript: for in if then else substring length parseInt split indexOf\r\n\r\npoker = (a,b) -> -2\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\npoker = (a,b) -> compare calc(a.split(\" \")), calc(b.split(\" \"))\r\ncalc = (hand) ->\r\n\tgroups = _.groupBy('  23456789TJQKA'.indexOf(card[2]) for card in hand)\r\n\t[score, ranks] = _.unzip reverse bsort ([cnt.length, parseInt(rank)] for rank, cnt of groups)\r\n\tif score.length == 5\r\n\t\tif compare(ranks, [14,5,4,3,2])==0 then ranks = [5,4,3,2,1]\r\n\t\tstraight = if ranks[0] - ranks[4] == 4 then 1 else 0\r\n\t\tflush = if _.size(_.uniq(suit.substring(0,2) for suit in hand)) == 1 then 1 else 0\r\n\t\tscore = [[[1], [3,1,1,1]], [[3,1,1,2], [5]]][flush][straight]\r\n\t[score, ranks]\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"poker 'kl8 ruA ru8 klA kl9', 'ru7 sp2 ru5 sp3 klA'\": -1\r\n\t\t\t\t\"poker 'kl8 spT klK hj9 sp4', 'ru7 sp2 ru5 sp3 klA'\": 1\r\n\t\t\t\t\"poker 'kl8 ruA ru8 klA kl9', 'kl8 ruA ru8 klA klT'\": 1\r\n\t\t\t\t\"poker 'kl8 ruA ru8 klA kl9', 'kl8 ruA ru8 klA kl7'\": -1\r\n\t\t\t\t\"poker 'kl8 ruA ru8 klA kl9', 'klT ruA ruT klA kl9'\": 1\r\n\t\t\t\t\"poker 'spA sp2 sp3 sp4 sp5', 'ruA ru2 ru3 ru4 ru5'\": 0\r\n\t\t\t\t\"poker 'spA hjA ruA klA sp5', 'ruA ru2 ru3 ru4 ru5'\": 1\r\n\t\t\t\t\"poker 'ru7 sp7 hj7 kl7 spJ', 'ru6 sp5 hj6 kl6 spQ'\": -1\r\n\t\t\t\t\"poker 'ru8 sp8 hj8 kl9 sp9', 'ru6 sp6 hj6 ru9 hj9'\": -1\r\n\t\t\t\t\"poker 'ru7 ru3 ru5 ru9 ruK', 'hj7 hj3 hj5 hj9 hjK'\": 0\r\n\t\t\t\t\"poker 'ru7 ru3 ru5 ru9 ruK', 'hj7 hj3 hj5 hj9 hjK'\": 0\r\n\t\t\t\t\"poker 'ru7 ru3 ru5 ru9 ruK', 'hj7 hj3 hj5 hj9 hjK'\": 0\r\n\t\t\t\t\"poker 'ru7 hj8 ru9 hj5 ru6', 'hj7 ru8 kl9 hjT sp6'\": 1\r\n\t\t\t\t\"poker 'ru7 hj8 ru8 kl8 ruJ', 'kl7 hj9 ru9 kl9 ruQ'\": 1\r\n\t\t\t\t\"poker 'ru7 hj7 ru8 kl8 ruJ', 'sp7 kl7 sp8 hj8 ruT'\": -1\r\n\t\t\t\t\"poker 'hj7 kl3 sp3 kl4 hjA', 'sp7 hj3 ru3 klK spA'\": 1\r\n\t\t\t\t\"poker 'sp7 hj3 ru2 kl4 spA', 'hj7 ru3 ru5 sp4 hjA'\": 1\r\n\t\t\td:\r\n\t\t\t\t'[1,2,3] == [1,2,3]' : false\r\n\t\t\t\t'2 < 11' : true\r\n\t\t\t\t'\"2\" < \"11\"' : false\r\n\t\t\t\t'[2] < [11]' : false\r\n\t\t\t\t'[\"2\"] < [\"11\"]' : false\r\n\t\t\t\t'compare [2], [11]' : 1\r\n\t\t\t\t'compare [1,2,3], [1,2,3]' : 0\r\n\t\t\t\t'compare [11], [2]' : -1\r\n\t\t\t\t'bsort [47,12,25]' : [12,25,47]\r\n\t\t\t\t'bsort [[11,13],[11,12],[2,2]]' : [[2,2],[11,12],[11,13]]\r\n\t\t\t\t'bsort [[11,13],[11,12],[2,2]], (a,b) -> compare b,a' : [[11,13],[11,12],[2,2]]\r\n\t\t\t\t'bsort [\"per\", \"anna\", \"bo\"]' : [\"anna\",\"bo\",\"per\"]\r\n\t\t\t\t'_.groupBy [\"per\", \"anna\", \"karl\"], \"length\"' : {\"3\":[\"per\"],\"4\":[\"anna\",\"karl\"]}\r\n\t\t\t\t'_.unzip [[\"moe\", 30, true], [\"larry\", 40, false]]' : [['moe', 'larry'], [30, 40], [true, false]]\r\n\t\t\t\t'_.uniq [5,4,1,2,1,9]' : [5,4,1,2,9]\r\n\r\n\t\t\te:\r\n\t\t\t\tPokerhand : \"https://sv.wikipedia.org/wiki/Pokerhand\"\r\n\t\t\t\t\"_.size\" : \"http://underscorejs.org/#size\"\r\n\t\t\t\t\"_.unzip\" : \"http://underscorejs.org/#unzip\"\r\n\t\t\t\t\"_.uniq\" : \"http://underscorejs.org/#uniq\"\r\n\r\n\r\n\t\tMatematik :\r\n\t\t\tb: \"\"\"\r\n# LOC:17 if then else * / + - % ** Math.sqrt == <= for in range [] concat\r\n\r\na = (x) -> 0\r\nb = (x) -> 0\r\nc = (x) -> 0\r\nd = (x) -> 0\r\ne = (x) -> 0\r\nh = (n) -> 0\r\nf = (x) -> 0\r\ng = (n) -> 0\r\nk = (x,y) -> 0\r\nl = (a,b) -> [0,0]\r\np = (a,b) -> 0\r\nn = (y) -> false\r\nm = (n) -> []\r\nq = (n) -> []\r\n\"\"\"\r\n\t\t\ta:\"\"\"\r\na = (n) -> 2*n+1\r\nb = (n) -> 2*n+2\r\nc = (n) -> (-1)**n * n\r\nd = (n) -> 10**n\r\ne = (n) -> 2**n\r\nh = (n) -> if n==0 then 0 else n+h(n-1)\r\nf = (n) -> if n==0 then 1 else n*f(n-1)\r\ng = (n) -> if n<=1 then 1 else g(n-1) + g(n-2)\r\nk = (x,y) -> if y == 0 then x else k y, x % y\r\nl = (a,b) -> [a/k(a,b),b/k(a,b)]\r\np = (a,b) -> Math.sqrt(a*a+b*b)\r\nn = (y) -> if y%100==0 then y%400==0 else y%4==0\r\nm = (n) -> i for i in [2...n] when n % i == 0\r\nq = (n) ->\r\n\tfor i in range n-1,1,-1\r\n\t\tv = i if n%i==0\r\n\tif v then [v].concat q(n/v) else [n]\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"a(i) for i in range 12\" : [1,3,5,7,9,11,13,15,17,19,21,23]\r\n\t\t\t\t\"b(i) for i in range 12\" : [2,4,6,8,10,12,14,16,18,20,22,24]\r\n\t\t\t\t\"c(i) for i in range 12\" : [0,-1,2,-3,4,-5,6,-7,8,-9,10,-11]\r\n\t\t\t\t\"d(i) for i in range 6\" : [1,10,100,1000,10000,100000]\r\n\t\t\t\t\"e(i) for i in range 10\" : [1,2,4,8,16,32,64,128,256,512]\r\n\t\t\t\t\"h(i) for i in range 12\" : [0,1,3,6,10,15,21,28,36,45,55,66]\r\n\t\t\t\t\"f(i) for i in range 9\" : [1,1,2,6,24,120,720,5040,40320]\r\n\t\t\t\t\"g(i) for i in range 12\" : [1,1,2,3,5,8,13,21,34,55,89,144]\r\n\t\t\t\t\"[k(7,11),k(18,42),k(100,30),k(99,105)]\" : [1,6,10,3]\r\n\t\t\t\t\"[l(1,4),l(2,4),l(12,18),l(90,100)]\" : [[1,4],[1,2],[2,3],[9,10]]\r\n\t\t\t\t\"[p(3,4),p(5,12),p(7,24),p(9,40),p(11,60)]\" : [5,13,25,41,61]\r\n\t\t\t\t\"[n(2000),n(2016),n(2017),n(2020),n(2100)]\" : [true,true,false,true,false]\r\n\t\t\t\t\"[m(17),m(60)]\" : [[],[2,3,4,5,6,10,12,15,20,30]]\r\n\t\t\t\t\"[q(17),q(60)]\" : [[17],[2,2,3,5]]\r\n\t\t\td:\r\n\t\t\t\t\"range 10\" : [0,1,2,3,4,5,6,7,8,9]\r\n\t\t\t\t\"i for i in range 10\" : [0,1,2,3,4,5,6,7,8,9]\r\n\t\t\t\t\"i*i for i in range 10\" : [0,1,4,9,16,25,36,49,64,81]\r\n\t\t\t\t\"i % 2 for i in range 6\" : [0,1,0,1,0,1]\r\n\t\t\t\t\"i % 2 == 0 for i in range 6\" : [true,false,true,false,true,false]\r\n\t\t\t\t\"Math.sqrt 25\" : 5\r\n\t\t\t\t\"[1,2].concat [3,4]\" : [1,2,3,4]\r\n\t\t\te:\r\n\t\t\t\tcomprehension : \"https://coffeescript-cookbook.github.io/chapters/arrays/list-comprehensions\"\r\n\t\t\t\trekursion : \"http://www.matteboken.se/lektioner/matte-5/talfoljder-och-induktionsbevis/rekursion\"\r\n\t\t\t\ttalserier : \"http://www.matteboken.se/lektioner/matte-3/ovningsexempel/talserier\"\r\n\t\t\t\tpythagoras : \"http://www.matteboken.se/lektioner/skolar-9/geometri/pythagoras-sats\"\r\n\t\t\t\tdelbarhet : \"http://www.matteboken.se/lektioner/matte-1/tal/delbarhet\"\r\n\r\n#########################\r\n\t\"A9: Problem\" :\r\n#########################\r\n\r\n\t\tTriangelskolan:\r\n\t\t\tb: \"\"\"\r\n# LOC:5\r\n# Se länk nedan för problembeskrivning.\r\nf = (x) -> 0\r\n\"\"\"\r\n\t\t\ta: \"\"\"\r\nf = (x) ->\r\n\tfor i in range 2000\r\n\t\tif i*(i+1)/2 > x\r\n\t\t\treturn i-1\r\n\t0\r\n\t\t\t\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 1\" : 1\r\n\t\t\t\t\"f 4\" : 2\r\n\t\t\t\t\"f 10\" : 4\r\n\t\t\t\t\"f 20\" : 5\r\n\t\t\tf:\r\n\t\t\t\t\"f 123\" : 15\r\n\t\t\t\t\"f 1234\" : 49\r\n\t\t\t\t\"f 123456\" : 496\r\n\t\t\t\t\"f 1000000\" : 1413\r\n\r\n\t\t\te:\r\n\t\t\t\t\"Triangelskolan\" : \"https://po.kattis.com/problems/triangel\"\r\n\r\n\t\tBio:\r\n\t\t\tb: \"\"\"\r\n# LOC:8\r\n# Se länk nedan för problembeskrivning.\r\nf = (platser,grupper) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\nf = (platser,grupper) ->\r\n\tmiss = 0\r\n\tfor grupp in grupper\r\n\t\tif grupp <= platser\r\n\t\t\tplatser -= grupp\r\n\t\telse\r\n\t\t\tmiss += 1\r\n\tmiss\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 10,[1,2,3,4,5]\" : 1\r\n\t\t\t\t\"f 1,[1,1,1,1,1,1,1,1,1,1]\" : 9\r\n\t\t\tf:\r\n\t\t\t\t\"f 100,[5,4,9,2,9,9,4,3,7,4,5,4,9,2,9,9,4,3,7,4,5,4,9,2,9,9,4,3,7,4]\" : 12\r\n\t\t\t\t\"f 19,[5,4,1,2,1,9,4,3,7,4]\" : 4\r\n\t\t\te:\r\n\t\t\t\t\"Bio\" : \"https://po.kattis.com/problems/bio\"\r\n\r\n\t\tBio2:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:8\r\n# Se länk nedan för problembeskrivning.\r\nf = (platser,grupper) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\nf = (platser,grupper) ->\r\n\tok = 0\r\n\tfor grupp in grupper\r\n\t\tif grupp <= platser\r\n\t\t\tplatser -= grupp\r\n\t\t\tok += 1\r\n\t\telse\r\n\t\t\treturn grupper.length - ok\r\n\tgrupper.length - ok\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 10,[1,2,3,4,5]\" : 1\r\n\t\t\t\t\"f 1,[1,1,1,1,1,1,1,1,1,1]\" : 9\r\n\t\t\tf:\r\n\t\t\t\t\"f 100,[5,4,9,2,9,9,4,3,7,4,5,4,9,2,9,9,4,3,7,4,5,4,9,2,9,9,4,3,7,4]\" : 13\r\n\t\t\t\t\"f 19,[5,4,1,2,1,9,4,3,7,4]\" : 5\r\n\t\t\t\t\"f 40,[5,4,1,2,1,9,4,3,7,4]\" : 0\r\n\t\t\te:\r\n\t\t\t\t\"Bio2\" : \"https://po.kattis.com/problems/bio2\"\r\n\r\n\t\tFullsatt:\r\n\t\t\tb: \"\"\"\r\n# LOC:12\r\n# Se länk nedan för problembeskrivning.\r\nf = (stolar,hallplatser) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\nf = (stolar,hallplatser) ->\r\n\tombord = []\r\n\tmiss = []\r\n\tfor hallplats,i in hallplatser\r\n\t\thpl = i+1\r\n\t\tombord = (p for p in ombord when p != hpl)\r\n\t\tfor person in hallplats\r\n\t\t\tif ombord.length < stolar\r\n\t\t\t\tombord.push person\r\n\t\t\telse\r\n\t\t\t\tmiss.push person\r\n\tmiss.length\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 3,[[2],[3],[4]]\" : 0\r\n\t\t\t\t\"f 1,[[2,3,4,5],[3,4,5],[4,5],[5]]\" : 6\r\n\t\t\t\t\"f 4,[[2,3],[3,3,3],[4,5,5,5,4],[5,5]]\" : 2\r\n\t\t\te:\r\n\t\t\t\t\"Fullsatt\" : \"https://po.kattis.com/problems/fullsatt\"\r\n\r\n\t\tPE01:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:1\r\n# If we list all the natural numbers below 10\r\n# that are multiples of 3 or 5,\r\n# we get 3, 5, 6 and 9.\r\n# The sum of these multiples is 23.\r\n\r\nf = (n) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\nf = (n) -> (i for i in range n when i%3==0 or i%5==0).reduce (t, s) -> t + s\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 10\" : 23\r\n\t\t\t\t\"f 100\" : 2318\r\n\t\t\t\t\"f 200\" : 9168\r\n\t\t\t\t\"f 500\" : 57918\r\n\t\t\t\t#\"f 1000\" : 233168\r\n\t\t\t\t\"f 2000\" : 931668\r\n\t\t\te:\r\n\t\t\t\t\"Multiples of 3 and 5\" : \"https://projecteuler.net/problem=1\"\r\n\r\n\t\tPE02:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC:7\r\n# Each new term in the Fibonacci sequence is generated\r\n# by adding the previous two terms. By starting with\r\n# 1 and 2, the first 10 terms will be:\r\n#\r\n# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\r\n#\r\n# By considering the terms in the Fibonacci sequence whose values\r\n# do not exceed four million, find the sum of the even-valued terms.\r\n\r\nf = (n) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\nf = (n) ->\r\n\t[a,b] = [0,1]\r\n\tsum = 0\r\n\tfor i in range n\r\n\t\tif b%2==0 then sum+=b\r\n\t\tif b>n then return sum\r\n\t\t[a,b] = [b,a+b]\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 40\" : 44\r\n\t\t\t\t\"f 400\" : 798\r\n\t\t\t\t\"f 4000\" : 3382\r\n\t\t\t\t\"f 40000\" : 60696\r\n\t\t\t\t\"f 400000\" : 257114\r\n\t\t\t\t#\"f 4000000\" : 4613732\r\n\t\t\te:\r\n\t\t\t\t\"Even Fibonacci numbers\" : \"https://projecteuler.net/problem=2\"\r\n\r\n\t\tPE03:\r\n\t\t\tb: \"\"\"\r\n\t\t\t# LOC: 9\r\n# The prime factors of 13195 are 5, 7, 13 and 29.\r\n# What is the largest prime factor of the number 51475143 ?\r\n\r\nf = (n) -> 0\r\n\t\t\t\"\"\"\r\n\t\t\ta: \"\"\"\r\nf = (n) ->\r\n\tfactor = 0\r\n\td = 2\r\n\twhile n > 1\r\n\t\twhile n % d == 0\r\n\t\t\tfactor =  d\r\n\t\t\tn = int n/d\r\n\t\td = d + 1\r\n\tfactor\r\n\"\"\"\r\n\t\t\tc:\r\n\t\t\t\t\"f 13195\" : 29\r\n\t\t\t\t\"f 51475143\" : 12497\r\n\t\t\te:\r\n\t\t\t\t\"Largest prime factor\" : \"https://projecteuler.net/problem=3\"\r\n"
  ]
}