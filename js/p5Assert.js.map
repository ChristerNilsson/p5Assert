{
  "version": 3,
  "file": "p5Assert.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\p5Assert.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "myCodeMirror = null\r\nsel1 = null\r\nsel2 = null\r\nchapter = \"\"\r\nexercise = \"\"\r\nmsg = null\r\ntimeout = null\r\n\r\npp = (obj) -> (JSON.stringify obj).replace /\"/g, ''\r\n\r\nsetMsg = (txt) ->\r\n\tmsg.val txt\r\n\tmsg.css 'background-color', if txt == '' then '#FFFFFF' else '#FF0000'\r\n\r\nfillSelect = (sel, dict) ->\r\n\tsel.empty()\r\n\tfor key of dict\r\n\t\tsel.append $(\"<option>\").attr('value', key).text(key)\r\n\r\nsel1change = (sel) ->\r\n\tchapter = sel.value\r\n\tfillSelect sel2, data[chapter]\r\n\texercise = _.keys(data[chapter])[0]\r\n\tsel2.val(exercise).change()\r\n\r\nsel2change = (sel) ->\r\n\texercise = sel.value\r\n\tb = data[chapter][exercise][\"b\"]\r\n\tsetLinks()\r\n\tmyCodeMirror.setValue(b)\r\n\trunAll()\r\n\tmyCodeMirror.focus()\r\n\r\nsetLinks = ->\r\n\tlinksClear()\r\n\tlinkAppend links,\t\"https://github.com/ChristerNilsson/p5Assert/blob/master/README.md\", \"Help\"\r\n\tlinkAppend links,\t\"https://p5js.org/reference\", \"p5\"\r\n\tlinkAppend links,\t\"http://coffeescript.org\", \"Coffeescript\"\r\n\tlinkAppend links,\t\"https://www.w3schools.com/js\", \"Javascript\"\r\n\tlinkAppend links,\t\"https://github.com/ChristerNilsson/Nilsson/blob/master/README.md\", \"Nilsson\"\r\n\tlinkAppend links,\t\"http://underscorejs.org/\", \"_\"\r\n\r\n\tfor text,link of data[chapter][exercise][\"e\"]\r\n\t\tlinkAppend links,link,text\r\n\r\ntableClear = -> $(\"#tabell tr\").remove()\r\naxiomClear = -> $(\"#axioms tr\").remove()\r\nlinksClear = -> $(\"#links tr\").remove()\r\n\r\ntableAppend = (t, call, expected, actual, show) -> # exakt tre kolumner\r\n\tsp = \"&nbsp;\"\r\n\trow = t.insertRow -1\r\n\r\n\tcell1 = row.insertCell -1\r\n\tcell1.style.backgroundColor = '#FFFF00'\r\n\r\n\tcell2 = row.insertCell -1\r\n\tcell2.style.backgroundColor = '#00FF00'\r\n\r\n\tcell3 = row.insertCell -1\r\n\tcell3.style.backgroundColor = if _.isEqual(expected, actual) then '#00FF00' else '#FF0000'\r\n\r\n\tif show\r\n\t\tcell1.innerHTML = sp + call + sp\r\n\t\tcell2.innerHTML = sp + JSON.stringify(expected) + sp\r\n\t\tcell3.innerHTML = sp + JSON.stringify(actual) + sp\r\n\telse\r\n\t\tcell1.innerHTML = sp + \"?\" + sp\r\n\t\tcell2.innerHTML = sp + \"?\" + sp\r\n\t\tcell3.innerHTML = sp + \"?\" + sp\r\n\r\naxiomAppend = (t, call, expected, actual) -> # exakt tvÃ¥ kolumner\r\n\tsp = \"&nbsp;\"\r\n\trow = t.insertRow -1\r\n\r\n\tcell1 = row.insertCell -1\r\n\tcell1.innerHTML = sp + call + sp\r\n\tcell1.style.backgroundColor = '#FFFF00'\r\n\r\n\tcell2 = row.insertCell -1\r\n\tcell2.innerHTML = sp + JSON.stringify(expected) + sp\r\n\tcell2.style.backgroundColor = '#00FF00' # if _.isEqual(expected, actual) then '#00FF00' else '#FF0000'\r\n\r\nd = (s) -> \"'\" + s + \"'\"\r\ndd = (s) -> '\"' + s + '\"'\r\n\r\nlinkAppend = (t, link, text) -> # exakt en kolumn\r\n\trow = t.insertRow -1\r\n\tcell1 = row.insertCell -1\r\n\ts = '<a href=' + d(link)\r\n\ts += ' target=' + d('_blank')\r\n\ts += ' onmouseover=' + d('this.style.color=' + dd('yellow') + ';')\r\n\ts += ' onmouseout='  + d('this.style.color=' + dd('black') + ';')\r\n\ts += '>'\r\n\ts += text\r\n\ts += '</a>'\r\n\tcell1.innerHTML = s\r\n\r\nchangeLayout = ->\r\n\tw = $(window).width()\r\n\t$(\".CodeMirror\").width w-215-15\r\n\t$(\"#msg\").width w-220-15\r\n\trunDelayed()\r\n\r\nresizeTimer=0\r\n$(window).resize () ->\r\n\tclearTimeout resizeTimer\r\n\tresizeTimer = setTimeout changeLayout, 10\r\n\r\nsetup = ->\r\n\tmsg = $ '#msg'\r\n\tsel1 = $ '#sel1'\r\n\tsel2 = $ '#sel2'\r\n\tfillSelect sel1, data\r\n\r\nwindow.onload = ->\r\n\tta = document.getElementById \"code\"\r\n\tmyCodeMirror = CodeMirror.fromTextArea ta,\r\n\t\tlineNumbers: true\r\n\t\tmode: \"coffeescript\"\r\n\t\tkeyMap: \"sublime\"\r\n\t\ttheme: \"dracula\"\r\n\t\tautoCloseBrackets: true\r\n\t\tlineWiseCopyCut: true\r\n\t\ttabSize: 2\r\n\t\tindentWithTabs: true\r\n\r\n\t$(\".CodeMirror\").css 'font-size',\"16pt\"\r\n\tmyCodeMirror.on \"change\", runDelayed\r\n\r\n\tchapter = _.keys(data)[0]\r\n\tsel1.val(chapter).change()\r\n\texercise = _.keys(data[chapter])[0]\r\n\tsel2.val(exercise).change()\r\n\r\n\tmyCodeMirror.focus()\r\n\twindow.resizeTo 1000,750\r\n\tchangeLayout()\r\n\r\nrunDelayed = ->\r\n\tif timeout then clearTimeout timeout\r\n\ttimeout = setTimeout runAll, 200\r\n\r\nrunAll = ->\r\n\tb = myCodeMirror.getValue()\r\n\tdata[chapter][exercise][\"b\"] = b\r\n\r\n\tcdict = data[chapter][exercise][\"c\"]\r\n\tfdict = data[chapter][exercise][\"f\"]\r\n\tddict = data[chapter][exercise][\"d\"]\r\n\r\n\tcalls = []\r\n\tcalls = calls.concat ('(' + call + ')' for call of cdict)\r\n\tcalls = calls.concat ('(' + call + ')' for call of fdict)\r\n\tcalls = calls.concat ('(' + call + ')' for call of ddict)\r\n\r\n\terror = \"\"\r\n\ttry\r\n\t\tcode = transpile b\r\n\t\ttry\r\n\t\t\tresults = eval transpile b + \"\\nreturn [\" + calls + \"]\"\r\n\t\tcatch e\r\n\t\t\terror = e.stack.split('\\n')[0]\r\n\tcatch e\r\n\t\terror = e.name + \": \" + e.message\r\n\r\n\ttableClear()\r\n\taxiomClear()\r\n\r\n\tsetMsg error\r\n\tif error == \"\"\r\n\r\n\t\toffset1 = 0\r\n\t\toffset2 = 0\r\n\r\n\t\tif cdict\r\n\t\t\tfor call,i in _.keys(cdict)\r\n\t\t\t\ttableAppend tabell, call, cdict[call], results[i], true\r\n\t\t\toffset1 = _.keys(cdict).length\r\n\r\n\t\tif fdict # secret\r\n\t\t\tfor call,i in _.keys(fdict)\r\n\t\t\t\ttableAppend tabell, call, fdict[call], results[offset1 + i], false\r\n\t\t\toffset2 = offset1 + _.keys(fdict).length\r\n\r\n\t\th = $('#tabell').height();\r\n\t\tdocument.getElementById('axioms').style.top = \"#{450 + h}px\"\r\n\r\n\t\tif ddict\r\n\t\t\tfor call,i in _.keys(ddict)\r\n\t\t\t\taxiomAppend axioms, call, ddict[call], results[offset2 + i]\r\n"
  ]
}