// Generated by CoffeeScript 1.11.1
var ass, assert, bg, bsort, circle, compare, fc, fixColor, getParameters, nilsson_version, print, range, rd, sc, sw;

nilsson_version = "1.0";

//ass = function(msg, a, b) {
//  return chai.assert.deepEqual(a, b, msg);
//};

assert = function(a, b) {
  if (!_.isEqual(a, b)) {
    return print("Assert failed: " + a + " != " + b);
  }
};

fixColor = function(args) {
  var a, b, g, n, r, ref, ref1;
  n = args.length;
  a = 1;
  if (n === 1) {
    ref = [args[0], args[0], args[0]], r = ref[0], g = ref[1], b = ref[2];
  }
  if (n === 2) {
    ref1 = [args[0], args[0], args[0], args[1]], r = ref1[0], g = ref1[1], b = ref1[2], a = ref1[3];
  }
  if (n === 3) {
    r = args[0], g = args[1], b = args[2];
  }
  if (n === 4) {
    r = args[0], g = args[1], b = args[2], a = args[3];
  }
  return color(255 * r, 255 * g, 255 * b, 255 * a);
};

fc = function() {
  if (arguments.length === 0) {
    return noFill();
  } else {
    return fill(fixColor(arguments));
  }
};

sc = function() {
  if (arguments.length === 0) {
    return noStroke();
  } else {
    return stroke(fixColor(arguments));
  }
};

bg = function() {
  return background(fixColor(arguments));
};

sw = function(n) {
  return strokeWeight(n);
};

circle = function(x, y, r) {
  return ellipse(x, y, 2 * r, 2 * r);
};

rd = function(degrees) {
  return rotate(radians(degrees));
};

print = console.log;

range = _.range;

getParameters = function(h) {
  var f;
  if (h == null) {
    h = window.location.href;
  }
  return _.object((function() {
    var k, len, ref, results;
    ref = h.split('?')[1].split('&');
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      f = ref[k];
      results.push(f.split('='));
    }
    return results;
  })());
};

assert(getParameters('http:\\christernilsson.github.io\Shortcut\www?a=0&b=1'), {
  'a': '0',
  'b': '1'
});

compare = function(a, b) {
  var c, i, k, len, ref;
  if (typeof a !== "object") {
    if (a > b) {
      return -1;
    } else {
      if (a < b) {
        return 1;
      } else {
        return 0;
      }
    }
  }
  ref = range(Math.min(a.length, b.length));
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    c = compare(a[i], b[i]);
    if (c !== 0) {
      return c;
    }
  }
  return 0;
};

assert(compare(12, 13), 1);

assert(compare(12, 12), 0);

assert(compare(13, 12), -1);

assert(compare([1, 11], [1, 2]), -1);

assert(compare([1, 11], [1, 11]), 0);

assert(compare([1, 2], [1, 11]), 1);

assert(compare([1, '11'], [1, '2']), 1);

assert(compare([1, '11'], [1, '11']), 0);

assert(compare([1, '2'], [1, '11']), -1);

bsort = function(list, cmp) {
  var i, j, k, l, len, len1, ref, ref1, ref2;
  if (cmp == null) {
    cmp = compare;
  }
  ref = range(list.length);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    ref1 = range(list.length - 1);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      if (cmp(list[j], list[j + 1]) < 0) {
        ref2 = [list[j + 1], list[j]], list[j] = ref2[0], list[j + 1] = ref2[1];
      }
    }
  }
  return list;
};

assert(bsort([1, 8, 2], compare), [1, 2, 8]);

assert(bsort([1, 8, 2], compare), [1, 2, 8]);

assert(bsort([[1], [8], [2]], compare), [[1], [2], [8]]);

assert(bsort([[2, 1], [2, 8], [2, 2]], compare), [[2, 1], [2, 2], [2, 8]]);

assert(bsort([[1, 8], [1, 7], [1, 9]], compare), [[1, 7], [1, 8], [1, 9]]);

assert(bsort([3, 2, 4, 1], compare), [1, 2, 3, 4]);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\github\Nilsson\nilsson.coffee